<UserControl
    x:Class="ClipboardApp.Control.MainWindowGridView1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commonModel="clr-namespace:QAChat.Resource;assembly=QAChat"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editorControl="clr-namespace:WpfAppCommon.Control.Editor;assembly=WpfAppCommon"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:ClipboardApp.ViewModel"
    x:Name="Root"
    mc:Ignorable="d">
    <UserControl.Resources>
        <commonModel:CommonStringResources x:Key="StringResources" />
        <ContextMenu
            x:Key="GridRowContextMenu"
            FontSize="12"
            ItemsSource="{Binding MenuItems}" />
        <Style x:Key="SingleLineTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="Height" Value="15" />
            <Setter Property="TextWrapping" Value="NoWrap" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <!--  DataGrid, GridSplitter, Preview  -->
        <Grid.RowDefinitions>
            <RowDefinition Height="0.4*" />
            <RowDefinition Height="5" />
            <RowDefinition Height="0.6*" />
        </Grid.RowDefinitions>
        <DataGrid
            Grid.Row="0"
            HorizontalAlignment="Stretch"
            AutoGenerateColumns="False"
            BorderThickness="1"
            CanUserAddRows="True"
            CanUserDeleteRows="False"
            CanUserReorderColumns="False"
            CanUserResizeColumns="True"
            CanUserResizeRows="False"
            CanUserSortColumns="True"
            ItemsSource="{Binding ItemsSource, ElementName=Root}"
            RowHeaderWidth="0"
            SelectionMode="Extended"
            SelectionUnit="FullRow"
            VerticalScrollBarVisibility="Auto"
            VirtualizingPanel.VirtualizationMode="Recycling"
            VirtualizingStackPanel.IsVirtualizing="True">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding ClipboardItemSelectionChangedCommand, ElementName=Root}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.InputBindings>
                <!--  Open selected item window by double-clicking  -->
                <MouseBinding Command="{Binding OpenSelectedItemCommand, ElementName=Root}" MouseAction="LeftDoubleClick" />
                <KeyBinding
                    Key="C"
                    Command="{Binding CopyItemCommand, ElementName=Root}"
                    Modifiers="Ctrl" />
                <KeyBinding Key="Delete" Command="{Binding DeleteItemCommand, ElementName=Root}" />
            </DataGrid.InputBindings>
            <DataGrid.Columns>
                <!--  ContentType  -->
                <DataGridCheckBoxColumn
                    Width="100"
                    Binding="{Binding IsPinned}"
                    Header="{Binding Source={StaticResource StringResources}, Mode=OneTime, Path=Instance.Pin}" />
                <DataGridTextColumn
                    Width="150"
                    MaxWidth="300"
                    Binding="{Binding UpdatedAtString}"
                    ElementStyle="{StaticResource SingleLineTextBlock}"
                    Header="{Binding Source={StaticResource StringResources}, Mode=OneTime, Path=Instance.UpdateDate}"
                    IsReadOnly="True" />
                <!--  ContentType  -->
                <DataGridTextColumn
                    Width="100"
                    Binding="{Binding ContentTypeString}"
                    ElementStyle="{StaticResource SingleLineTextBlock}"
                    Header="{Binding Source={StaticResource StringResources}, Mode=OneTime, Path=Instance.Type}"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Width="100"
                    Binding="{Binding TagsText}"
                    ElementStyle="{StaticResource SingleLineTextBlock}"
                    Header="{Binding Source={StaticResource StringResources}, Mode=OneTime, Path=Instance.Tag}"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding DescriptionText}"
                    ElementStyle="{StaticResource SingleLineTextBlock}"
                    Header="{Binding Source={StaticResource StringResources}, Mode=OneTime, Path=Instance.Title}"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding SourceApplicationTitleText}"
                    ElementStyle="{StaticResource SingleLineTextBlock}"
                    Header="{Binding Source={StaticResource StringResources}, Mode=OneTime, Path=Instance.SourceTitle}"
                    IsReadOnly="True" />
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="ContextMenu" Value="{StaticResource GridRowContextMenu}" />
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
        <GridSplitter
            Grid.Row="1"
            Height="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            Visibility="{Binding PreviewModeVisibility, ElementName=Root}" />
        <materialDesign:Card
            Grid.Row="2"
            Margin="3,3,3,3"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            materialDesign:ElevationAssist.Elevation="Dp8"
            Visibility="{Binding PreviewModeVisibility, ElementName=Root}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBox
                    Name="DescriptionText"
                    Grid.Row="0"
                    Margin="10,10,10,10"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    FontSize="10pt"
                    IsReadOnly="True"
                    Text="{Binding SelectedItem.DescriptionText, ElementName=Root, Mode=OneWay}" />
                <TextBlock
                    Name="headerText"
                    Grid.Row="1"
                    Margin="10,0,10,10"
                    HorizontalAlignment="Stretch"
                    FontSize="6pt"
                    Text="{Binding Path=SelectedItem.HeaderText}"
                    TextTrimming="None" />
                <TabControl
                    Grid.Row="2"
                    Margin="10,3,10,3"
                    HorizontalContentAlignment="Left"
                    ItemsSource="{Binding SelectedItem.TabItems}"
                    SelectedIndex="{Binding SelectedItem.SelectedTabIndex}" />
            </Grid>
            <materialDesign:Card.InputBindings>
                <!--  Open selected item window by double-clicking  -->
                <MouseBinding
                    Command="{Binding OpenSelectedItemCommand, ElementName=Root}"
                    CommandParameter="{Binding}"
                    MouseAction="LeftDoubleClick" />
            </materialDesign:Card.InputBindings>
        </materialDesign:Card>
    </Grid>
</UserControl>
