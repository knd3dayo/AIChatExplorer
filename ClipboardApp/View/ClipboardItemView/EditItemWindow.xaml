<Window
    x:Class="ClipboardApp.View.ClipboardItemView.EditItemWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="clr-namespace:WpfAppCommon.Control;assembly=WpfAppCommon"
    xmlns:commonModel="clr-namespace:WpfAppCommon.Model;assembly=WpfAppCommon"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editorControl="clr-namespace:WpfAppCommon.Control.Editor;assembly=WpfAppCommon"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:ClipboardApp.ViewModel"
    Title="{Binding Title}"
    Width="900"
    Height="600"
    Style="{StaticResource MaterialDesignWindow}"
    mc:Ignorable="d">
    <Window.Resources>
        <Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="25" />
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <viewModel:EditItemWindowViewModel />
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding
            Key="Escape"
            Command="{Binding CloseCommand, Mode=OneTime}"
            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
        <!--  Ctrl + Sで保存  -->
        <KeyBinding
            Key="S"
            Command="{Binding SaveCommand, Mode=OneTime}"
            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
            Modifiers="Ctrl" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="18" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--  メニューバー  -->
        <StackPanel
            Grid.Row="0"
            Margin="0,0,0,0"
            Orientation="Vertical">
            <materialDesign:ColorZone
                materialDesign:ElevationAssist.Elevation="Dp4"
                DockPanel.Dock="Top"
                Mode="PrimaryMid">
                <Menu
                    Name="menu1"
                    Margin="0,0,0,0"
                    materialDesign:MenuAssist.TopLevelMenuItemHeight="18"
                    IsMainMenu="False">
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="ファイル">
                        <MenuItem
                            Command="{Binding ItemViewModel.OpenContentAsFileCommand}"
                            CommandParameter="{Binding ItemViewModel}"
                            Header="{Binding StringResources.OpenTextAsFile, Mode=OneTime}" />
                        <!--  ファイルを開く  -->
                        <MenuItem Command="{Binding ItemViewModel.OpenFileCommand}" Header="{Binding StringResources.OpenFile, Mode=OneTime}" />
                        <!--  新規ファイルとして開く  -->
                        <MenuItem Command="{Binding ItemViewModel.OpenFileAsNewFileCommand}" Header="{Binding StringResources.OpenAsNewFile, Mode=OneTime}" />
                        <!--  フォルダを開く  -->
                        <MenuItem Command="{Binding ItemViewModel.OpenFolderCommand}" Header="{Binding StringResources.OpenFolder, Mode=OneTime}" />
                        <!--  テキスト抽出  -->
                        <MenuItem Command="{Binding ItemViewModel.ExtractTextCommand}" Header="{Binding StringResources.ExtractText, Mode=OneTime}" />

                        <MenuItem
                            Command="{Binding ItemViewModel.MaskDataCommand}"
                            Header="{Binding StringResources.MaskData, Mode=OneTime}"
                            Visibility="{Binding ItemViewModel.DevFeaturesVisibility}" />
                    </MenuItem>
                </Menu>

            </materialDesign:ColorZone>
        </StackPanel>
        <Grid Grid.Row="1" Margin="0,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Label
                    Grid.Row="0"
                    Grid.Column="0"
                    Width="100"
                    Margin="10,10,10,0"
                    HorizontalContentAlignment="Center"
                    Content="{Binding StringResources.Title, Mode=OneTime}" />
                <TextBox
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="10,10,10,0"
                    IsEnabled="True"
                    Text="{Binding ItemViewModel.Description, UpdateSourceTrigger=PropertyChanged}" />
                <Label
                    Grid.Row="1"
                    Grid.Column="0"
                    Width="50"
                    Margin="10,0,10,10"
                    HorizontalAlignment="Center"
                    Content="タグ" />
                <TextBox
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="10,0,10,10"
                    materialDesign:HintAssist.Hint="{Binding StringResources.ClickHereToOpenTheTagEditScreen, Mode=OneTime}"
                    IsReadOnly="True"
                    Text="{Binding TagsString}">
                    <TextBox.InputBindings>
                        <MouseBinding Command="{Binding AddTagButtonCommand, Mode=OneTime}" MouseAction="LeftDoubleClick" />
                    </TextBox.InputBindings>
                </TextBox>
            </Grid>
            <TabControl
                Grid.Row="1"
                Margin="10,3,10,3"
                HorizontalContentAlignment="Left">
                <!--  テキスト  -->
                <TabItem
                    Width="Auto"
                    Height="Auto"
                    Margin="10,0,10,0"
                    Padding="0"
                    FontSize="10"
                    Header="{Binding StringResources.Text, Mode=OneTime}"
                    Visibility="{Binding ItemViewModel.TextTabVisibility}">
                    <editorControl:MyTextBox
                        Name="Editor"
                        Margin="10,3,10,3"
                        FontSize="10pt"
                        Text="{Binding ItemViewModel.Content, UpdateSourceTrigger=PropertyChanged}"
                        TextWrapping="{x:Static commonModel:ClipboardAppConfig.TextWrapping}">
                        <editorControl:MyTextBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="ApplicationCommands.Copy" />
                                <MenuItem Command="ApplicationCommands.Cut" />
                                <MenuItem Command="ApplicationCommands.Paste" />
                                <MenuItem Command="ApplicationCommands.SelectAll" />
                                <Separator />
                            </ContextMenu>
                        </editorControl:MyTextBox.ContextMenu>
                    </editorControl:MyTextBox>
                </TabItem>
                <!--  ファイル  -->
                <TabItem
                    Width="Auto"
                    Height="Auto"
                    Margin="10,0,10,0"
                    Padding="0"
                    FontSize="10"
                    Header="{Binding StringResources.File, Mode=OneTime}"
                    Visibility="{Binding ItemViewModel.FileTabVisibility}">
                    <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding IsDrawerOpen}" OpenMode="Standard">
                        <materialDesign:DrawerHost.LeftDrawerContent>
                            <Grid Width="200">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ListBox
                                    Grid.Row="0"
                                    Margin="10,3,10,3"
                                    ItemsSource="{Binding ItemViewModel.Files}"
                                    SelectedItem="{Binding SelectedFile, UpdateSourceTrigger=PropertyChanged}"
                                    SelectionMode="Single">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Grid.Row="0"
                                                Grid.Column="1"
                                                Width="180"
                                                Margin="10,3,10,3"
                                                Text="{Binding FileName, Mode=OneWay}" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>
                        </materialDesign:DrawerHost.LeftDrawerContent>

                        <Grid Margin="10,0,10,0" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150" />
                                <ColumnDefinition Width="600" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="10,3,10,3"
                                VerticalAlignment="Center"
                                Text="{Binding StringResources.FilePath, Mode=OneTime}" />
                            <editorControl:MyTextBox
                                Grid.Row="0"
                                Grid.Column="1"
                                Margin="10,3,10,3"
                                IsReadOnly="True"
                                Text="{Binding SelectedFile.FilePath, Mode=OneWay}" />

                            <TextBlock
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="10,3,10,3"
                                VerticalAlignment="Center"
                                Text="{Binding StringResources.Folder, Mode=OneTime}" />

                            <editorControl:MyTextBox
                                Grid.Row="1"
                                Grid.Column="1"
                                Margin="10,3,10,3"
                                IsReadOnly="True"
                                Text="{Binding SelectedFile.FolderName, Mode=OneWay}" />
                            <TextBlock
                                Grid.Row="2"
                                Grid.Column="0"
                                Margin="10,3,10,3"
                                VerticalAlignment="Center"
                                Text="{Binding StringResources.FileName, Mode=OneTime}" />
                            <editorControl:MyTextBox
                                Grid.Row="2"
                                Grid.Column="1"
                                Margin="10,3,10,3"
                                IsReadOnly="True"
                                Text="{Binding SelectedFile.FileName, Mode=OneWay}" />
                            <TextBlock
                                Grid.Row="3"
                                Grid.Column="0"
                                Margin="10,3,10,3"
                                VerticalAlignment="Center"
                                Text="{Binding StringResources.FolderNameAndFileName, Mode=OneTime}" />
                            <editorControl:MyTextBox
                                Grid.Row="3"
                                Grid.Column="1"
                                Margin="10,3,10,3"
                                IsReadOnly="True"
                                Text="{Binding SelectedFile.FolderAndFileName, Mode=OneWay}" />
                            <TextBlock
                                Grid.Row="4"
                                Grid.Column="0"
                                Margin="10,3,10,3"
                                VerticalAlignment="Center"
                                Text="{Binding StringResources.Image, Mode=OneTime}"
                                Visibility="{Binding SelectedFileImageVisibility}" />
                            <Image
                                Grid.Row="4"
                                Grid.Column="1"
                                Margin="10,3,10,3"
                                Source="{Binding SelectedFile.BitmapImage, Mode=OneWay}"
                                Stretch="Uniform"
                                Visibility="{Binding SelectedFileImageVisibility}" />
                            <TextBlock
                                Grid.Row="5"
                                Grid.Column="0"
                                Margin="10,3,10,3"
                                VerticalAlignment="Center"
                                Text="{Binding StringResources.ExtractedText, Mode=OneTime}" />
                            <editorControl:MyTextBox
                                Grid.Row="5"
                                Grid.Column="1"
                                Margin="10,3,10,3"
                                IsReadOnly="True"
                                Text="{Binding SelectedFile.ExtractedText, Mode=OneWay}" />

                        </Grid>
                    </materialDesign:DrawerHost>
                </TabItem>
                <!--  背景情報  -->
                <TabItem
                    Width="Auto"
                    Height="Auto"
                    Margin="10,0,10,0"
                    Padding="0"
                    FontSize="10"
                    Header="{Binding StringResources.BackgroundInformation, Mode=OneTime}"
                    Visibility="{Binding ItemViewModel.BackgroundInfoVisibility}">
                    <editorControl:MyTextBox
                        Name="BackgrondInfo"
                        Margin="10,3,10,3"
                        FontSize="10pt"
                        Text="{Binding ItemViewModel.BackgroundInfo, UpdateSourceTrigger=PropertyChanged}" />
                </TabItem>
                <!--  サマリー  -->
                <TabItem
                    Width="Auto"
                    Height="Auto"
                    Margin="10,0,10,0"
                    Padding="0"
                    FontSize="10"
                    Header="{Binding StringResources.Summary, Mode=OneTime}"
                    Visibility="{Binding ItemViewModel.SummaryVisibility}">
                    <editorControl:MyTextBox
                        Name="Summary"
                        Margin="10,3,10,3"
                        FontSize="10pt"
                        Text="{Binding ItemViewModel.Summary, UpdateSourceTrigger=PropertyChanged}" />
                </TabItem>
            </TabControl>
        </Grid>
        <Grid Grid.Row="2">
            <DockPanel HorizontalAlignment="Left">
                <ToggleButton
                    x:Name="MenuToggleButton"
                    Margin="10,10,10,10"
                    AutomationProperties.Name="HamburgerToggleButton"
                    DockPanel.Dock="Left"
                    IsChecked="{Binding IsDrawerOpen, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
            </DockPanel>

            <DockPanel HorizontalAlignment="Right">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button
                        Grid.Column="0"
                        Width="120"
                        Margin="10,10,10,10"
                        Command="{Binding QAChatButtonCommand, Mode=OneTime}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                        Content="{Binding StringResources.OpenAIChat, Mode=OneTime}"
                        DockPanel.Dock="Right" />
                    <Button
                        Grid.Column="1"
                        Width="100"
                        Margin="10,10,10,10"
                        Command="{Binding OKButtonCommand, Mode=OneTime}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                        Content="{Binding StringResources.OK, Mode=OneTime}"
                        DockPanel.Dock="Right" />
                    <Button
                        Grid.Column="2"
                        Width="100"
                        Margin="10,10,10,10"
                        Command="{Binding CloseCommand, Mode=OneTime}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                        Content="{Binding StringResources.Cancel, Mode=OneTime}"
                        DockPanel.Dock="Right" />
                </Grid>
            </DockPanel>
        </Grid>
        <cc:MyStatusBar Grid.Row="3" VerticalAlignment="Bottom" />

    </Grid>
</Window>
