<UserControl
    x:Class="ClipboardApp.View.ClipboardItemView.IssuePanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commonModel="clr-namespace:WpfAppCommon.Model;assembly=WpfAppCommon"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:ClipboardApp.View.ClipboardItemView"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:ClipboardApp.ViewModel"
    d:DataContext="{d:DesignInstance Type=viewModel:EditItemWindowViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <commonModel:CommonStringResources x:Key="StringResources" />
        <Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="25" />
        </Style>
    </UserControl.Resources>
    <!--  Issues用のDataGridを表示するためのTabItem  -->
    <DataGrid
        Name="IssuesDataGrid"
        Margin="10,0,10,0"
        AutoGenerateColumns="False"
        BorderThickness="1"
        CanUserAddRows="True"
        CanUserDeleteRows="True"
        CanUserReorderColumns="False"
        CanUserResizeColumns="True"
        CanUserResizeRows="False"
        CanUserSortColumns="True"
        ItemsSource="{Binding ItemViewModel.Issues}"
        RowHeaderWidth="0"
        SelectionMode="Single"
        SelectionUnit="FullRow"
        VerticalScrollBarVisibility="Auto">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="SelectionChanged">
                <i:InvokeCommandAction Command="{Binding IssueItemSelectionChangedCommand}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <DataGrid.Columns>
            <DataGridTextColumn
                Width="150"
                Binding="{Binding Title, UpdateSourceTrigger=PropertyChanged}"
                Header="{Binding Source={StaticResource StringResources}, Mode=OneTime, Path=Instance.Title}" />
            <DataGridTextColumn
                Width="400"
                Binding="{Binding Content, UpdateSourceTrigger=PropertyChanged}"
                Header="{Binding Source={StaticResource StringResources}, Mode=OneTime, Path=Instance.Content}" />
            <DataGridTextColumn
                Width="250"
                Binding="{Binding Action, UpdateSourceTrigger=PropertyChanged}"
                Header="{Binding Source={StaticResource StringResources}, Mode=OneTime, Path=Instance.Action}" />
        </DataGrid.Columns>
        <DataGrid.ContextMenu>
            <!--  削除  -->
            <ContextMenu>
                <MenuItem
                    Command="{Binding DeleteIssueCommand}"
                    CommandParameter="{Binding}"
                    Header="{Binding StringResources.Delete}" />
            </ContextMenu>
        </DataGrid.ContextMenu>
    </DataGrid>

</UserControl>
