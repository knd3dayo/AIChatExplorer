<Window x:Class="ClipboardApp.View.AutoProcessRuleView.EditAutoProcessRuleWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClipboardApp"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:view="clr-namespace:ClipboardApp.View.AutoProcessRuleView"
        mc:Ignorable="d"
        Title="EditAutoProcessRuleWindow" Height="450" Width="600">
    <Window.DataContext>
        <view:EditAutoProcessRuleWindowViewModel />
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="ルール名" Grid.Column="0"  Margin="10,10,10,10"/>
                <TextBox Text="{Binding RuleName}" Grid.Column="1" Margin="10,10,10,30" HorizontalAlignment="Stretch"
                     />
                <CheckBox Content="有効" IsChecked="{Binding IsAutoProcessRuleEnabled}" Grid.Column="2" Margin="10,10,10,10" />
            </Grid>
            <DockPanel Grid.Row="1" HorizontalAlignment="Stretch"
                       >
                <Label Content="適用対象フォルダ" Margin="10,10,10,10"
                        Width="250"
                       />
                <!-- 適用対象を選択するツリービューを表示するボタン-->
                <Button Content="選択" 
                        Command="{Binding OpenSelectTargetFolderWindowCommand}"
                        Margin="10,10,10,10"
                        />
                <TextBox Text="{Binding TargetFolder.AbsoluteCollectionName}" Margin="10,10,10,10" 
                         IsEnabled="False"
                         />
            </DockPanel>

            <DockPanel Grid.Row="2" HorizontalAlignment="Left">
                <CheckBox Content="すべてのアイテムに適用" IsChecked="{Binding IsAllItemsRuleChecked}" 
                          Margin="10,10,10,10" DockPanel.Dock="Left"
                          Width="250"
                          />
            </DockPanel>
            <DockPanel Grid.Row="3" HorizontalAlignment="Stretch">
                <CheckBox Content="説明に次の文字が含まれる場合" IsChecked="{Binding IsDescriptionRuleChecked}" 
                          Margin="10,10,10,10" DockPanel.Dock="Left"
                          Width="250"
                          />
                <TextBox Text="{Binding Description}" Margin="10,10,10,10" />
            </DockPanel>
            <DockPanel Grid.Row="4" HorizontalAlignment="Stretch">
                <CheckBox Content="クリップボードに次の文字列が含まれる場合" IsChecked="{Binding IsContentRuleChecked}" 
                          Margin="10,10,10,10" DockPanel.Dock="Left"
                          Width="250"
                          />
                <TextBox Text="{Binding Content}" Margin="10,10,10,10" />
            </DockPanel>
            <!-- ソースアプリの名前-->
            <DockPanel Grid.Row="5" HorizontalAlignment="Stretch">
                <CheckBox Content="ソースアプリの名前に次の文字列が含まれる場合" 
                          IsChecked="{Binding IsSourceApplicationRuleChecked}" 
                          Margin="10,10,10,10" DockPanel.Dock="Left"
                          Width="250"
                          />
                <TextBox Text="{Binding SourceApplicationName}" Margin="10,10,10,10" />
            </DockPanel>
            <!-- ソースアプリのタイトル-->
            <DockPanel Grid.Row="6" HorizontalAlignment="Stretch">
                <CheckBox Content="ソースアプリのタイトルに次の文字列が含まれる場合" 
                          IsChecked="{Binding IsSourceApplicationTitleRuleChecked}" 
                          Margin="10,10,10,10" DockPanel.Dock="Left"
                          Width="250"
                          />
                <TextBox Text="{Binding SourceApplicationTitle}" Margin="10,10,10,10" />
            </DockPanel>
            <!-- AutoProcessItemを選択するComboBox-->
            <DockPanel Grid.Row="7" HorizontalAlignment="Stretch">
                <Label Content="次の処理を実行する" Margin="10,10,10,10"
                        Width="250"
                       />
                <ComboBox ItemsSource="{Binding AutoProcessItems}" 
                          IsSynchronizedWithCurrentItem="True"
                          SelectedValue="{Binding SelectedAutoProcessItem.Name}"
                          SelectedItem="{Binding SelectedAutoProcessItem}"
                          SelectedValuePath="Name"
                          DisplayMemberPath="DisplayName"
                          Margin="10,10,10,10"
                          >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction
                                Command="{Binding AutoProcessItemSelectionChangedCommand}" 
                                />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </DockPanel>
            <DockPanel Grid.Row="8" HorizontalAlignment="Stretch" IsEnabled="{Binding FolderSelectionPanelEnabled, UpdateSourceTrigger=PropertyChanged}"

                       >
                <Label Content="コピー/移動/マージ先" Margin="10,10,10,10"
                        Width="250"
                       />
                <!-- コピー/移動/マージ先を選択するツリービューを表示するボタン-->
                <Button Content="選択" 
                        Command="{Binding OpenSelectDestinationFolderWindowCommand}"
                        Margin="10,10,10,10"
                        />
                <TextBox Text="{Binding DestinationFolder.AbsoluteCollectionName}" Margin="10,10,10,10" 
                         IsEnabled="False"
                         />
            </DockPanel>
            <Grid Grid.Row="9">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <DockPanel Grid.Column="0" HorizontalAlignment="Right">
                    <Button Content="OK" 
                        Margin="10,0,0,0"
                        Command="{Binding OKButtonClickedCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"                    
                        Width="50"
                        />
                    <Button Content="Cancel"
                        Margin="10,0,30,0"
                        Command="{Binding CancelButtonClickedCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"                    
                        DockPanel.Dock="Right"
                        Width="50"
                        />
                </DockPanel>
            </Grid>
        </Grid>
    </Grid>
</Window>
