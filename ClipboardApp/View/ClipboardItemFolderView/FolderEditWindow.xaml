<Window
    x:Class="ClipboardApp.View.ClipboardItemFolderView.FolderEditWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="clr-namespace:WpfAppCommon.Control;assembly=WpfAppCommon"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editorControl="clr-namespace:WpfAppCommon.Control.Editor;assembly=WpfAppCommon"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:ClipboardApp.ViewModel.Folder"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="{Binding StringResources.EditClipboardFolder, Mode=OneTime}"
    Width="800"
    Height="400"
    d:DataContext="{d:DesignInstance Type=local:FolderEditWindowViewModel}"
    mc:Ignorable="d">
    <Window.Resources>
        <Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="25" />
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding
            Key="Escape"
            Command="{Binding CloseCommand, Mode=OneTime}"
            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--  メニューバー  -->
        <StackPanel
            Grid.Row="0"
            Margin="0,0,0,0"
            Orientation="Vertical">
            <materialDesign:ColorZone
                materialDesign:ElevationAssist.Elevation="Dp4"
                DockPanel.Dock="Top"
                Mode="PrimaryMid">
                <Menu
                    Name="menu1"
                    Margin="0,0,0,0"
                    materialDesign:MenuAssist.TopLevelMenuItemHeight="18"
                    IsMainMenu="False">
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="" />
                </Menu>

            </materialDesign:ColorZone>
        </StackPanel>
        <materialDesign:DrawerHost
            Grid.Row="1"
            IsLeftDrawerOpen="{Binding IsDrawerOpen}"
            OpenMode="Standard">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <CheckBox
                        Grid.Row="0"
                        Margin="10,10,10,10"
                        Content="自フォルダを参照先ベクトルDBに追加, Mode=OneTime}"
                        IsChecked="{Binding IncludeInReferenceVectorDBItems}" />
                    <TextBlock
                        Grid.Row="1"
                        Margin="10,10,10,10"
                        HorizontalAlignment="Left"
                        FontSize="10"
                        Text="{Binding StringResources.ClickHereToAddVectorDB, Mode=OneTime}">
                        <TextBlock.InputBindings>
                            <MouseBinding Command="{Binding AddVectorDBItemCommand, Mode=OneTime}" MouseAction="LeftClick" />
                        </TextBlock.InputBindings>
                    </TextBlock>
                    <ListBox
                        Grid.Row="2"
                        Margin="10,10,10,10"
                        ItemsSource="{Binding VectorDBItems}"
                        SelectedItem="{Binding SelectedVectorDBItem}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding OpenVectorDBItemCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding RemoveVectorDBItemCommand, Mode=OneTime}" Header="{Binding StringResources.ExcludeFromList, Mode=OneTime}" />
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>
                </Grid>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <Grid Margin="10,10,10,20" HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    Width="120"
                    Margin="10,10,10,10"
                    Text="{Binding StringResources.Name, Mode=OneTime}" />
                <TextBox
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="10,10,10,10"
                    Text="{Binding FolderViewModel.FolderName}" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Width="120"
                    Margin="10,10,10,10"
                    Text="{Binding StringResources.Description, Mode=OneTime}" />
                <editorControl:MyTextBox
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="10,10,10,10"
                    materialDesign:HintAssist.Hint="ここにフォルダの説明を入力"
                    Text="{Binding FolderViewModel.Description}" />
            </Grid>
        </materialDesign:DrawerHost>
        <Grid Grid.Row="2" Margin="10,10,10,10">
            <DockPanel HorizontalAlignment="Left">
                <ToggleButton
                    x:Name="MenuToggleButton"
                    Width="30"
                    Height="30"
                    Margin="10,0,10,0"
                    AutomationProperties.Name="HamburgerToggleButton"
                    DockPanel.Dock="Left"
                    IsChecked="{Binding IsDrawerOpen, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
            </DockPanel>
            <DockPanel HorizontalAlignment="Right">
                <Button
                    Width="100"
                    Margin="10,0,10,0"
                    Command="{Binding CreateCommand, Mode=OneTime}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="{Binding StringResources.OK, Mode=OneTime}" />
                <Button
                    Width="100"
                    Margin="10,0,10,0"
                    Command="{Binding CloseCommand, Mode=OneTime}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="{Binding StringResources.Cancel, Mode=OneTime}"
                    DockPanel.Dock="Right" />
            </DockPanel>
        </Grid>
        <cc:MyStatusBar
            Grid.Row="3"
            Margin="0,0,0,0"
            VerticalAlignment="Bottom" />

    </Grid>
</Window>
