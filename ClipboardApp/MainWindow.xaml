<Window
    x:Class="ClipboardApp.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:ClipboardApp"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="window1"
    Title="コピペアプリ"
    Width="800"
    Height="450"
    Style="{StaticResource MaterialDesignWindow}"
    mc:Ignorable="d">
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <!--  クリップボードアイテムのコンテキストメニューアイテム  -->
        <CollectionViewSource x:Key="ClipboardItemContextMenuItems" Source="{Binding ClipboardItemContextMenuItems}" />
        <!--  フォルダのコンテキストメニューアイテム  -->
        <CollectionViewSource x:Key="ClipboardItemFolderContextMenuItems" Source="{Binding ClipboardItemFolderContextMenuItems}" />
    </Window.Resources>
    <Window.InputBindings>
        <!--  アプリケーション終了  -->
        <KeyBinding
            Key="Q"
            Command="{Binding ExitCommand}"
            Modifiers="Control" />
        <!--  検索ダイアログを表示  -->
        <KeyBinding
            Key="F"
            Command="{Binding SearchCommand}"
            Modifiers="Control" />
        <!--  アイテムをLiteDBから再読み込みする  -->
        <KeyBinding
            Key="R"
            Command="{Binding ReloadCommand}"
            Modifiers="Control" />

        <!--  選択したアイテムを開く  -->
        <KeyBinding
            Key="O"
            Command="{Binding OpenSelectedItemCommand}"
            Modifiers="Control" />
        <!--  選択したアイテムをファイルとして開く  -->
        <KeyBinding
            Key="O"
            Command="{Binding OpenSelectedItemAsFileCommand}"
            Modifiers="Control+Shift" />
        <!--  選択したアイテムを新規ファイルとして開く  -->
        <KeyBinding
            Key="O"
            Command="{Binding OpenSelectedItemAsNewFileCommand}"
            Modifiers="Control+Shift+Alt" />
        <!--  選択中のフォルダにアイテムを貼り付け  -->
        <KeyBinding
            Key="V"
            Command="{Binding PasteFromClipboardCommand}"
            Modifiers="Control" />
        <!--  選択中のアイテムにアイテムをマージ  -->
        <KeyBinding
            Key="M"
            Command="{Binding MergeItemCommand}"
            Modifiers="Control" />
        <!--  選択中のアイテムにアイテムをヘッダー付きでマージ  -->
        <KeyBinding
            Key="M"
            Command="{Binding MergeItemWithHeaderCommand}"
            Modifiers="Control+Shift" />
        <!--  選択中のアイテムをクリップボードにコピー  -->
        <KeyBinding
            Key="C"
            Command="{Binding CopyToClipboardCommand}"
            Modifiers="Control" />
        <!--  選択中のアイテムをクリップボードにコピー + CutフラグをTrue  -->
        <KeyBinding
            Key="X"
            Command="{Binding CutItemCommand}"
            Modifiers="Control" />
        <!--  アイテムを新規作成  -->
        <KeyBinding
            Key="N"
            Command="{Binding CreateItemCommand}"
            Modifiers="Control" />
        <!--  選択したアイテムを削除  -->
        <KeyBinding Key="Delete" Command="{Binding DeleteSelectedItemCommand}" />
        <!--  表示中のアイテムを削除  -->
        <KeyBinding
            Key="Delete"
            Command="{Binding DeleteDisplayedItemCommand}"
            Modifiers="Control" />


    </Window.InputBindings>

    <Grid x:Name="grid1">
        <!--  1. メニューバー、2. (TreeView,ListBox)、3. StatusTextのGrid.Row 1と3は固定サイズにする。  -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel
            Grid.Row="0"
            Margin="0,0,0,0"
            Orientation="Vertical">
            <materialDesign:ColorZone
                materialDesign:ElevationAssist.Elevation="Dp4"
                DockPanel.Dock="Top"
                Mode="PrimaryMid">

                <!--  メニューバー  -->
                <Menu
                    Name="menu1"
                    VerticalAlignment="Top"
                    materialDesign:MenuAssist.TopLevelMenuItemHeight="25"
                    IsMainMenu="True">
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="ファイル">
                        <MenuItem
                            Background="{DynamicResource MaterialDesign.Brush.Primary}"
                            Command="{Binding ToggleClipboardMonitor}"
                            Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                            Header="{Binding ClipboardMonitorButtonText}" />
                        <MenuItem
                            Background="{DynamicResource MaterialDesign.Brush.Primary}"
                            Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                            Header="作成">
                            <MenuItem
                                Background="{DynamicResource MaterialDesign.Brush.Primary}"
                                Command="{Binding CreateItemCommand}"
                                Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                                Header="アイテム作成" />
                        </MenuItem>
                        <MenuItem
                            Background="{DynamicResource MaterialDesign.Brush.Primary}"
                            Command="{Binding ExitCommand}"
                            Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                            Header="終了" />
                    </MenuItem>
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="編集">
                        <MenuItem
                            Background="{DynamicResource MaterialDesign.Brush.Primary}"
                            Command="{Binding OpenTagWindowCommand}"
                            Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                            Header="タグ編集" />
                        <MenuItem
                            Background="{DynamicResource MaterialDesign.Brush.Primary}"
                            Command="{Binding OpenListAutoProcessRuleWindowCommand}"
                            Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                            Header="自動処理ルール編集" />
                        <MenuItem
                            Background="{DynamicResource MaterialDesign.Brush.Primary}"
                            Command="{Binding OpenListPythonScriptWindowCommand}"
                            Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                            Header="Pythonスクリプト編集"
                            Visibility="{Binding UsePythonVisibility}" />
                        <MenuItem
                            Background="{DynamicResource MaterialDesign.Brush.Primary}"
                            Command="{Binding OpenListPromptTemplateWindowCommand}"
                            Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                            Header="プロンプトテンプレート編集"
                            Visibility="{Binding UseOpenAIVisibility}" />
                        <MenuItem
                            Background="{DynamicResource MaterialDesign.Brush.Primary}"
                            Command="{Binding OpenRAGManagementWindowCommand}"
                            Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                            Header="RAGソース編集"
                            Visibility="{Binding UseOpenAIVisibility}" />
                    </MenuItem>
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="ツール">
                        <MenuItem
                            Background="{DynamicResource MaterialDesign.Brush.Primary}"
                            Command="{Binding OpenOpenAIWindowCommand}"
                            Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                            Header="OpenAIチャット"
                            Visibility="{Binding UseOpenAIVisibility}" />
                    </MenuItem>

                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Command="{Binding SearchCommand}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="検索" />
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Command="{Binding SettingCommand}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="設定" />
                </Menu>
            </materialDesign:ColorZone>
        </StackPanel>
        <Grid Grid.Row="1">
            <!--  TreeView, ListBox  -->
            <Grid.ColumnDefinitions>
                <!--  1. TreeView、2. GridSplitter、3. ListBox  -->
                <!--  TreeViewとListBoxの間にGridSplitterを入れる  -->
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!--  フォルダのTreeView  -->
            <TreeView
                Grid.Row="0"
                Grid.Column="0"
                ItemsSource="{Binding ClipboardItemFolders}">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="local:ClipboardItemFolderViewModel" ItemsSource="{Binding Children}">
                        <!--  ツリーアイテム  -->
                        <!--  HorizontalAlignmentで左右、外側のサイズと同じになるようにする  -->
                        <DockPanel HorizontalAlignment="Stretch">
                            <TextBlock
                                Margin="0,0,10,0"
                                DockPanel.Dock="Left"
                                Text="{Binding DisplayName}" />
                            <DockPanel.InputBindings>
                                <!--  フォルダを左クリックでそのフォルダを表示  -->
                                <!-- <MouseBinding  MouseAction="LeftClick" Command="{Binding OpenFolderCommand}" CommandParameter="{Binding}"/> -->
                            </DockPanel.InputBindings>
                            <DockPanel.ContextMenu>
                                <!--  フォルダのコンテキストメニュー  -->
                                <ContextMenu>
                                    <MenuItem
                                        Command="{Binding CreateFolderCommand}"
                                        CommandParameter="{Binding}"
                                        Header="新規作成"
                                        IsEnabled="{Binding IsCreateVisible}" />
                                    <MenuItem
                                        Command="{Binding EditFolderCommand}"
                                        CommandParameter="{Binding}"
                                        Header="編集"
                                        IsEnabled="{Binding IsEditVisible}" />
                                    <MenuItem
                                        Command="{Binding DeleteFolderCommand}"
                                        CommandParameter="{Binding}"
                                        Header="削除"
                                        IsEnabled="{Binding IsDeleteVisible}" />
                                    <MenuItem
                                        Command="{Binding ExportItemsFromFolderCommand}"
                                        CommandParameter="{Binding}"
                                        Header="エクスポート" />
                                    <MenuItem
                                        Command="{Binding ImportItemsToFolderCommand}"
                                        CommandParameter="{Binding}"
                                        Header="インポート" />
                                </ContextMenu>
                            </DockPanel.ContextMenu>
                        </DockPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{Binding FolderSelectionChangedCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TreeView>
            <GridSplitter
                Grid.Column="1"
                Width="5"
                HorizontalAlignment="Stretch" />
            <!--  クリップボードのListBox  -->
            <!--  HorizontalAlignmentで左右、外側のサイズと同じになるようにする  -->
            <ListBox
                Name="listBox1"
                Grid.Row="0"
                Grid.Column="2"
                Margin="0,0,0,0"
                HorizontalAlignment="Stretch"
                ItemsSource="{Binding SelectedFolder.Items}"
                SelectionMode="Extended">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ClipboardItemSelectionChangedCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <!--  HorizontalAlignmentで左右、外側のサイズと同じになるようにする  -->
                        <materialDesign:Card
                            Margin="5,5,5,5"
                            HorizontalAlignment="Stretch"
                            materialDesign:ElevationAssist.Elevation="Dp8"
                            ToolTip="{Binding Path=ToolTipString}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <!--  1. 説明、 2.詳細情報、 3. クリップボードアイテム  -->
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock
                                    Name="DescriptionText"
                                    Grid.Row="0"
                                    Margin="10,10,10,10"
                                    HorizontalAlignment="Stretch"
                                    FontSize="10pt"
                                    Text="{Binding Path=DescriptionText}"
                                    TextTrimming="None"
                                    Visibility="{Binding DescriptionVisibility}" />
                                <TextBlock
                                    Name="clipboardText"
                                    Grid.Row="1"
                                    MinHeight="50"
                                    MaxHeight="100"
                                    Margin="10,10,10,10"
                                    HorizontalAlignment="Stretch"
                                    FontSize="8pt"
                                    Text="{Binding Path=Content}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="Wrap" />
                                <Separator
                                    Grid.Row="2"
                                    Margin="10,0,10,0"
                                    Background="{DynamicResource MaterialDesign.Brush.Primary}"
                                    BorderThickness="1"
                                    Style="{StaticResource MaterialDesignLightSeparator}" />
                                <TextBlock
                                    Name="headerText"
                                    Grid.Row="3"
                                    Margin="10,0,10,10"
                                    HorizontalAlignment="Stretch"
                                    FontSize="6pt"
                                    Text="{Binding Path=HeaderText}"
                                    TextTrimming="None" />
                            </Grid>
                            <materialDesign:Card.ContextMenu>
                                <ContextMenu>
                                    <ContextMenu.ItemsSource>
                                        <CompositeCollection>
                                            <CollectionContainer Collection="{Binding Source={StaticResource ClipboardItemContextMenuItems}}" />
                                        </CompositeCollection>
                                    </ContextMenu.ItemsSource>
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="MenuItem">
                                            <Setter Property="MenuItem.Header" Value="{Binding Title}" />
                                            <Setter Property="MenuItem.Command" Value="{Binding Command}" />
                                            <Setter Property="MenuItem.CommandParameter" Value="{Binding}" />
                                            <Setter Property="MenuItem.ItemsSource" Value="{Binding SubMenuItems}" />
                                            <Setter Property="MenuItem.InputGestureText" Value="{Binding InputGestureText}" />
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>

                                </ContextMenu>
                            </materialDesign:Card.ContextMenu>
                            <materialDesign:Card.InputBindings>
                                <!--  選択したアイテムを開く WindowをElementNameで参照して DataContext(=MainWindowViewModel)のコマンドを呼び出す  -->
                                <MouseBinding
                                    Command="{Binding DataContext.OpenSelectedItemCommand, ElementName=window1}"
                                    CommandParameter="{Binding}"
                                    MouseAction="LeftDoubleClick" />
                            </materialDesign:Card.InputBindings>
                        </materialDesign:Card>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
        <StatusBar
            Name="statusBar1"
            Grid.Row="2"
            VerticalAlignment="Bottom"
            Background="{DynamicResource MaterialDesign.Brush.Primary}"
            Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}">
            <StatusBarItem>
                <TextBlock Name="statusBarTextBlock1" Text="{Binding Path=StatusText.Text}" />
            </StatusBarItem>
            <StatusBar.InputBindings>
                <MouseBinding Command="{Binding OpenStatusMessageWindowCommand}" MouseAction="LeftClick" />
            </StatusBar.InputBindings>
        </StatusBar>
        <ProgressBar
            Grid.Row="1"
            IsIndeterminate="{Binding IsIndeterminate}"
            Style="{StaticResource MaterialDesignCircularProgressBar}"
            Value="0" />
    </Grid>
</Window>
