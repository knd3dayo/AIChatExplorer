<Window x:Class="ClipboardApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:ClipboardApp"
        mc:Ignorable="d"
        Title="コピペツール" Height="450" Width="800"
        Name="window1"
        xmlns:b="clr-namespace:ClipboardApp.Behaviors"
        Style="{StaticResource MaterialDesignWindow}"
        >
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <!-- クリップボードアイテムのコンテキストメニューアイテム-->
        <CollectionViewSource Source="{Binding ClipboardItemContextMenuItems}" x:Key="ClipboardItemContextMenuItems"/>
        <!-- フォルダのコンテキストメニューアイテム-->
        <CollectionViewSource Source="{Binding ClipboardItemFolderContextMenuItems}" x:Key="ClipboardItemFolderContextMenuItems"/>
    </Window.Resources>
    <Window.InputBindings>
        <!-- アプリケーション終了-->
        <KeyBinding Key="Q" Modifiers="Control" Command="{Binding ExitCommand}" />
        <!-- 検索ダイアログを表示-->
        <KeyBinding Key="F" Modifiers="Control" Command="{Binding SearchCommand}" />
        <!-- アイテムをLiteDBから再読み込みする-->
        <KeyBinding Key="R" Modifiers="Control" Command="{Binding ReloadCommand}" />

        <!-- 選択したアイテムを開く-->
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenSelectedItemCommand}" />
        <!-- 選択したアイテムをファイルとして開く-->
        <KeyBinding Key="O" Modifiers="Control+Shift" Command="{Binding OpenSelectedItemAsFileCommand}" />
        <!-- 選択したアイテムを新規ファイルとして開く-->
        <KeyBinding Key="O" Modifiers="Control+Shift+Alt" Command="{Binding OpenSelectedItemAsNewFileCommand}" />
        <!-- 選択中のフォルダにアイテムを貼り付け-->
        <KeyBinding Key="V" Modifiers="Control" Command="{Binding PasteFromClipboardCommand}" />
        <!-- 選択中のアイテムにアイテムをマージ-->
        <KeyBinding Key="M" Modifiers="Control" Command="{Binding MergeItemCommand}" />
        <!-- 選択中のアイテムにアイテムをヘッダー付きでマージ-->
        <KeyBinding Key="M" Modifiers="Control+Shift" Command="{Binding MergeItemWithHeaderCommand}" />
        <!--選択中のアイテムをクリップボードにコピー-->
        <KeyBinding Key="C" Modifiers="Control" Command="{Binding CopyToClipboardCommand}" />
        <!-- 選択中のアイテムをクリップボードにコピー + CutフラグをTrue-->
        <KeyBinding Key="X" Modifiers="Control" Command="{Binding CutItemCommand}" />
        <!-- アイテムを新規作成-->
        <KeyBinding Key="N" Modifiers="Control" Command="{Binding CreateItemCommand}" />
        <!-- 選択したアイテムを削除-->
        <KeyBinding Key="Delete" Command="{Binding DeleteSelectedItemCommand}" />
        <!-- 表示中のアイテムを削除-->
        <KeyBinding Key="Delete" Modifiers="Control" Command="{Binding DeleteDisplayedItemCommand}" />


    </Window.InputBindings>
    <Grid Name="grid1" >
        <!-- 1. メニューバー、2. (TreeView,ListBox)、3. StatusTextのGrid.Row 1と3は固定サイズにする。 -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel  Orientation="Vertical" Grid.Row="0" Margin="0,0,0,0">
            <!-- メニューバー -->
            <Menu Name="menu1" VerticalAlignment="Top" IsMainMenu="True">
                <MenuItem Header="ファイル">
                 <MenuItem Header="{Binding ClipboardMonitorButtonText}" Command="{Binding ToggleClipboardMonitor}" />
                        <MenuItem Header="作成">
                        <MenuItem Header="アイテム作成" Command="{Binding CreateItemCommand}" />
                        <MenuItem Header="Pythonスクリプト作成" Command="{Binding CreatePythonScriptCommand}" />
                    </MenuItem>
                        <MenuItem Header="終了" Command="{Binding ExitCommand}" />
                </MenuItem>
                <MenuItem Header="編集">
                    <MenuItem Header="タグ編集" Command="{Binding OpenTagWindowCommand}" />
                    <MenuItem Header="自動処理ルール編集" Command="{Binding OpenListAutoProcessRuleWindowCommand}" />
                    <MenuItem Header="Pythonスクリプト編集" Command="{Binding EditPythonScriptCommand}" />
                    
                </MenuItem>

                <MenuItem Header="検索" Command="{Binding SearchCommand}" />
                <MenuItem Header="設定" Command="{Binding SettingCommand}" />
            </Menu>
        </StackPanel>
        <Grid Grid.Row="1">
            <!-- TreeView, ListBox -->
            <Grid.ColumnDefinitions>
                <!-- 1. TreeView、2. GridSplitter、3. ListBox-->
                <!-- TreeViewとListBoxの間にGridSplitterを入れる -->
                <ColumnDefinition Width="150"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!-- フォルダのTreeView -->
            <TreeView Grid.Column="0" Grid.Row="0" 
                      ItemsSource="{Binding ClipboardItemFolders}"
                      >
                <TreeView.ItemTemplate >
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="local:ClipboardItemFolderViewModel">
                        <!-- ツリーアイテム-->
                        <!-- HorizontalAlignmentで左右、外側のサイズと同じになるようにする -->
                        <DockPanel HorizontalAlignment="Stretch" >
                            <TextBlock Text="{Binding DisplayName}" Margin="0,0,10,0" DockPanel.Dock="Left"/>
                            <DockPanel.InputBindings>
                                <!-- フォルダを左クリックでそのフォルダを表示-->
                                <!-- <MouseBinding  MouseAction="LeftClick" Command="{Binding OpenFolderCommand}" CommandParameter="{Binding}"/> -->
                            </DockPanel.InputBindings>
                            <DockPanel.ContextMenu>
                                <!-- フォルダのコンテキストメニュー -->
                                <ContextMenu>
                                    <MenuItem Header="新規作成" Command="{Binding CreateFolderCommand}" CommandParameter="{Binding}"
                                              IsEnabled="{Binding IsCreateVisible}"
                                              />
                                    <MenuItem Header="編集" Command="{Binding EditFolderCommand}" CommandParameter="{Binding}"
                                              IsEnabled="{Binding IsEditVisible}"
                                              />
                                    <MenuItem Header="削除" Command="{Binding DeleteFolderCommand}" CommandParameter="{Binding}"
                                              IsEnabled="{Binding IsDeleteVisible}"
                                              />
                                    <MenuItem Header="エクスポート" Command="{Binding ExportItemsFromFolderCommand}"  CommandParameter="{Binding}" />
                                    <MenuItem Header="インポート" Command="{Binding ImportItemsToFolderCommand}"  CommandParameter="{Binding}" />
                                </ContextMenu>
                            </DockPanel.ContextMenu>
                        </DockPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction
                                Command="{Binding FolderSelectionChangedCommand}" PassEventArgsToCommand="True" 
                                />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TreeView>
            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center" />
            <!-- クリップボードのListBox -->
            <!-- HorizontalAlignmentで左右、外側のサイズと同じになるようにする -->
            <ListBox
                ItemsSource="{Binding SelectedFolder.Items}"
                SelectedItem="{Binding SelectedItem}"
                Grid.Column="2" Grid.Row="0" HorizontalAlignment="Stretch" Margin="0,0,0,0"
                SelectionMode="Extended"
                b:ListBoxBehavior.ScrollSelectedIntoView="True"
                b:ListBoxBehavior.SelectedItems="{Binding SelectedItems, Mode=TwoWay}"
                >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                    <!-- HorizontalAlignmentで左右、外側のサイズと同じになるようにする -->
                        <DockPanel 
                            HorizontalAlignment="Stretch" Margin="0,0,0,0"
                            ToolTip="{Binding Path=ToolTipString}"
                            >
                            <Grid DockPanel.Dock="Left">
                                <Grid.RowDefinitions>
                                    <!-- 1. 説明、 2.詳細情報、 3. クリップボードアイテム-->
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock
                                    Text="{Binding Path=DescriptionText}"
                                    Name="DescriptionText" 
                                    TextTrimming="None"
                                    HorizontalAlignment="Stretch"
                                    FontSize="10pt"
                                    Grid.Row="0"
                                    Visibility="{Binding DescriptionVisibility}"
                                    />
                                <TextBlock
                                    Text="{Binding Path=HeaderText}"
                                    Name="headerText" 
                                    TextTrimming="None"
                                    HorizontalAlignment="Stretch"
                                    FontSize="6pt"
                                    Grid.Row="1"/>
                                <Border 
                                    BorderBrush="Black" 
                                    BorderThickness="1"  
                                    Grid.Row="2">
                                    <TextBlock 
                                        Text="{Binding Path=Content}" Name="clipboardText" 
                                        TextTrimming="CharacterEllipsis"
                                        FontSize="8pt"
                                        MinHeight="50" MaxHeight="100"
                                        HorizontalAlignment="Stretch"
                                        TextWrapping="Wrap"
                                        />
                                </Border>
                            </Grid>
                            <DockPanel.ContextMenu>
                                <ContextMenu>
                                    <ContextMenu.ItemsSource>
                                        <CompositeCollection>
                                            <CollectionContainer Collection="{Binding Source={StaticResource ClipboardItemContextMenuItems}}"/>
                                        </CompositeCollection>
                                    </ContextMenu.ItemsSource>
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="MenuItem">
                                            <Setter Property="MenuItem.Header" Value="{Binding Title}"/>
                                            <Setter Property="MenuItem.Command" Value="{Binding Command}"/>
                                            <Setter Property="MenuItem.CommandParameter" Value="{Binding}"/>
                                            <Setter Property="MenuItem.ItemsSource" Value="{Binding SubMenuItems}"/>
                                            <Setter Property="MenuItem.InputGestureText" Value="{Binding InputGestureText}"/>
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>

                                </ContextMenu>
                            </DockPanel.ContextMenu>
                            <DockPanel.InputBindings>
                                <!-- 選択したアイテムを開く-->
                                <MouseBinding  MouseAction="LeftDoubleClick" Command="{Binding OpenSelectedItemCommand}" CommandParameter="{Binding}"/>
                            </DockPanel.InputBindings>
                        </DockPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
        <StatusBar Name="statusBar1" VerticalAlignment="Bottom" Grid.Row="2">
            <StatusBarItem>
                <TextBlock Name="statusBarTextBlock1" Text="{Binding Path=StatusText.Text }" />
            </StatusBarItem>
            <StatusBar.InputBindings>
                <MouseBinding MouseAction="LeftClick" Command="{Binding OpenStatusMessageWindowCommand}" />
            </StatusBar.InputBindings>
        </StatusBar>
    </Grid>
</Window>
