<UserControl
    x:Class="LibUIMergeChat.View.MergeTargetPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commonModel="clr-namespace:LibUIPythonAI.Resource;assembly=LibUIPythonAI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editorControl="clr-namespace:LibUIPythonAI.Control.Editor;assembly=LibUIPythonAI"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:LibUIMergeChat.View"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:res="clr-namespace:LibUIMergeChat.View"
    xmlns:viewModel="clr-namespace:LibUIMergeChat.ViewModel"
    x:Name="Root"
    d:DataContext="{d:DesignInstance Type=viewModel:MergeTargetPanelViewModel}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ContextMenu
            x:Key="GridRowContextMenu"
            FontSize="12"
            ItemsSource="{Binding ContentItemMenuItems}" />
        <Style x:Key="SingleLineTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="Height" Value="15" />
            <Setter Property="TextWrapping" Value="NoWrap" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <!--  TreeView, ListBox  -->
        <Grid.ColumnDefinitions>
            <!--  1. TreeView, 2. GridSplitter, 3. ListBox  -->
            <!--  Insert GridSplitter between TreeView and ListBox  -->
            <ColumnDefinition Width="300" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <!--  Folder TreeView  -->
        <Grid>
            <!--  Folder TreeView  -->
            <TreeView Grid.Column="0" ItemsSource="{Binding MergeTargetTreeViewControlViewModel.FolderViewModels}">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="Margin" Value="3,3,3,3" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="local:ApplicationItemFolderViewModel" ItemsSource="{Binding Children}">
                        <!--  Tree item  -->
                        <!--  Set HorizontalAlignment to Stretch to match the outer size on the left and right  -->
                        <DockPanel HorizontalAlignment="Stretch">
                            <materialDesign:PackIcon
                                Width="18"
                                Height="18"
                                Foreground="{DynamicResource MaterialDesign.Brush.Primary.Light}"
                                Kind="Folder" />
                            <TextBlock
                                Margin="0,3,0,0"
                                DockPanel.Dock="Left"
                                FontSize="12"
                                Foreground="#616161"
                                Style="{StaticResource MaterialDesignBodyMediumTextBlock}"
                                Text="{Binding FolderName}" />
                            <DockPanel.ContextMenu>
                                <!--  Folder context menu  -->
                                <ContextMenu FontSize="12" ItemsSource="{Binding FolderMenuItems}" />
                            </DockPanel.ContextMenu>
                        </DockPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{Binding MergeTargetTreeViewControlViewModel.FolderSelectionChangedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TreeView>
        </Grid>
        <GridSplitter
            Grid.Column="1"
            Width="5"
            HorizontalAlignment="Stretch" />

        <Grid Grid.Column="2">
            <!--  DataGrid, GridSplitter, Preview  -->
            <Grid.RowDefinitions>
                <RowDefinition Height="0.4*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="0.6*" />
            </Grid.RowDefinitions>
            <Grid>
                <DataGrid
                    Grid.Row="0"
                    HorizontalAlignment="Stretch"
                    AutoGenerateColumns="False"
                    BorderThickness="1"
                    CanUserAddRows="True"
                    CanUserDeleteRows="False"
                    CanUserReorderColumns="False"
                    CanUserResizeColumns="True"
                    CanUserResizeRows="False"
                    CanUserSortColumns="True"
                    ItemsSource="{Binding MergeTargetDataGridViewControlViewModel.Items}"
                    RowHeaderWidth="0"
                    SelectionMode="Extended"
                    SelectionUnit="FullRow"
                    VerticalScrollBarVisibility="Auto"
                    VirtualizingPanel.VirtualizationMode="Recycling"
                    VirtualizingStackPanel.IsVirtualizing="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding MergeTargetDataGridViewControlViewModel.ApplicationItemSelectionChangedCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.InputBindings>
                        <!--  Open selected item window by double-clicking  -->
                        <MouseBinding
                            Command="{Binding MergeTargetDataGridViewControlViewModel.OpenSelectedItemCommand}"
                            CommandParameter="{Binding}"
                            MouseAction="LeftDoubleClick" />
                        <!--  Delete selected item  -->
                        <KeyBinding Key="Delete" Command="{Binding MergeTargetDataGridViewControlViewModel.DeleteItemCommand, Mode=OneTime}" />
                        <!--  Delete displayed item  -->
                        <KeyBinding
                            Key="Delete"
                            Command="{Binding MergeTargetDataGridViewControlViewModel.DeleteDisplayedItemCommand, Mode=OneTime}"
                            CommandParameter="{Binding}"
                            Modifiers="Control" />
                    </DataGrid.InputBindings>
                    <DataGrid.Columns>
                        <!--  IsSelected  -->
                        <DataGridCheckBoxColumn
                            Width="100"
                            Binding="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}"
                            Header="{x:Static res:ViewStringResources.MergeTarget}" />
                        <!--  CreatedAt, UpdatedAt  -->
                        <DataGridTextColumn
                            Width="150"
                            MaxWidth="300"
                            Binding="{Binding CreatedAtString}"
                            ElementStyle="{StaticResource SingleLineTextBlock}"
                            Header="{x:Static res:ViewStringResources.CreateDate}"
                            IsReadOnly="True" />
                        <DataGridTextColumn
                            Width="150"
                            MaxWidth="300"
                            Binding="{Binding UpdatedAtString}"
                            ElementStyle="{StaticResource SingleLineTextBlock}"
                            Header="{x:Static res:ViewStringResources.UpdateDate}"
                            IsReadOnly="True" />
                        <!--  ContentType  -->
                        <DataGridTextColumn
                            Width="100"
                            Binding="{Binding ContentTypeString}"
                            ElementStyle="{StaticResource SingleLineTextBlock}"
                            Header="{x:Static res:ViewStringResources.Type}"
                            IsReadOnly="True" />
                        <DataGridTextColumn
                            Width="100"
                            Binding="{Binding TagsText}"
                            ElementStyle="{StaticResource SingleLineTextBlock}"
                            Header="{x:Static res:ViewStringResources.Tag}"
                            IsReadOnly="True" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding DescriptionText}"
                            ElementStyle="{StaticResource SingleLineTextBlock}"
                            Header="{x:Static res:ViewStringResources.Title}"
                            IsReadOnly="True" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding SourceApplicationTitleText}"
                            ElementStyle="{StaticResource SingleLineTextBlock}"
                            Header="{x:Static res:ViewStringResources.SourceTitle}"
                            IsReadOnly="True" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <GridSplitter
                Grid.Row="1"
                Height="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center" />
            <Grid Grid.Row="2" Margin="3,3,3,3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBox
                    Name="DescriptionText"
                    Grid.Row="0"
                    Margin="10,10,10,10"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    FontSize="10pt"
                    IsReadOnly="True"
                    Text="{Binding MergeTargetDataGridViewControlViewModel.SelectedItem.DescriptionText, Mode=OneWay}" />
                <!--  TabControl タブ削除時にSelectedIndexのタブがNullとなった場合のため、FallbackValueとTargetNullValueを設定  -->
                <TabControl
                    Grid.Row="1"
                    Margin="10,3,10,3"
                    HorizontalContentAlignment="Left"
                    ItemsSource="{Binding MergeTargetDataGridViewControlViewModel.SelectedItem.TabItems, FallbackValue={x:Null}}"
                    SelectedIndex="{Binding MergeTargetDataGridViewControlViewModel.SelectedItem.SelectedTabIndex, TargetNullValue=-1}" />
                <TextBlock
                    Name="headerText"
                    Grid.Row="2"
                    Margin="10,0,10,10"
                    HorizontalAlignment="Stretch"
                    FontSize="8pt"
                    Text="{Binding Path=MergeTargetDataGridViewControlViewModel.SelectedItem.HeaderText}"
                    TextTrimming="None"
                    Visibility="{Binding PropertiesVisibility}" />
                <CheckBox
                    Grid.Row="3"
                    Margin="10,0,10,10"
                    HorizontalAlignment="Left"
                    Content="{x:Static res:ViewStringResources.ShowProperties}"
                    FontSize="8pt"
                    IsChecked="{Binding ShowProperties}" />
            </Grid>
        </Grid>
    </Grid>
</UserControl>
