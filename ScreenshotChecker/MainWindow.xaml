<Window
    x:Class="ImageChat.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="clr-namespace:WpfAppCommon.Control;assembly=WpfAppCommon"
    xmlns:commonModel="clr-namespace:WpfAppCommon.Model;assembly=WpfAppCommon"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:ImageChat.ViewModel"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="{Binding StringResources.ImageChat, Mode=OneTime}"
    Width="800"
    Height="450"
    WindowState="Maximized"
    mc:Ignorable="d">
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <commonModel:CommonStringResources x:Key="StringResources" />
        <Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="25" />
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding
            Key="Escape"
            Command="{Binding CloseCommand, Mode=OneTime}"
            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <materialDesign:ColorZone
            Grid.Row="0"
            materialDesign:ElevationAssist.Elevation="Dp4"
            DockPanel.Dock="Top"
            Mode="PrimaryMid">
            <!--  メニューバー  -->
            <Grid Margin="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Menu
                    Name="menu0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    materialDesign:MenuAssist.TopLevelMenuItemHeight="18"
                    IsMainMenu="True">
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="{Binding StringResources.File, Mode=OneTime}">
                        <MenuItem
                            Height="Auto"
                            Background="{DynamicResource MaterialDesign.Brush.Primary}"
                            Command="{Binding SelectImageFileComman, Mode=OneTime}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                            Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                            Header="{Binding StringResources.SelectImageFile, Mode=OneTime}" />
                    </MenuItem>
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="{Binding StringResources.Edit, Mode=OneTime}">
                        <MenuItem
                            Height="Auto"
                            Background="{DynamicResource MaterialDesign.Brush.Primary}"
                            Command="{Binding ScreenShotCheckPromptCommand, Mode=OneTime}"
                            Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                            Header="{Binding StringResources.EditImageEvidenceCheckItem, Mode=OneTime}" />
                    </MenuItem>
                </Menu>
                <Menu
                    Name="menu1"
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    materialDesign:MenuAssist.TopLevelMenuItemHeight="18"
                    IsMainMenu="True">
                    <MenuItem
                        Height="Auto"
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Command="{Binding SettingCommand, Mode=OneTime}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="{Binding StringResources.Setting, Mode=OneTime}"
                        IsEnabled="{Binding IsStartFromInternalApp}" />
                </Menu>

            </Grid>
        </materialDesign:ColorZone>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                Margin="10,0,10,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{Binding StringResources.Title, Mode=OneTime}" />
            <TextBox
                Grid.Row="0"
                Grid.Column="1"
                Margin="10,10,10,0"
                IsEnabled="True"
                Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>

        <Grid Grid.Row="2" Margin="0,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Name="Grid1" Width="200" />
                <ColumnDefinition Width="3" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--  選択した画像ファイル名一覧を表示するListBox  -->
            <ListBox
                Name="ListBox1"
                Grid.Column="0"
                Margin="0,0,10,0"
                ItemsSource="{Binding ImageFiles}"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                SelectionMode="Extended">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Image
                                Grid.Row="0"
                                Height="100"
                                Margin="0,0,0,0"
                                Source="{Binding BitmapImage}" />

                            <TextBlock
                                Grid.Row="1"
                                Margin="0,0,10,0"
                                Text="{Binding FileName}" />
                            <Grid.InputBindings>
                                <MouseBinding
                                    Command="{Binding DataContext.OpenSelectedImageFileCommand, Mode=OneTime, RelativeSource={RelativeSource AncestorType=Window}}"
                                    CommandParameter="{Binding}"
                                    Gesture="LeftDoubleClick" />
                            </Grid.InputBindings>
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem
                                        Command="{Binding DataContext.OpenSelectedImageFileCommand, Mode=OneTime, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        Header="{Binding Source={StaticResource StringResources}, Path=Instance.Open, Mode=OneTime}" />
                                    <MenuItem
                                        Command="{Binding DataContext.RemoveSelectedImageFileCommand, Mode=OneTime, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        Header="{Binding Source={StaticResource StringResources}, Path=Instance.Delete, Mode=OneTime}" />
                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <GridSplitter
                Grid.Column="1"
                Width="3"
                VerticalAlignment="Stretch"
                Background="Gray"
                IsEnabled="False"
                ShowsPreview="True" />
            <Grid Grid.Column="2" Margin="0,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ScrollViewer
                    Grid.Row="0"
                    Margin="0,0,0,0"
                    VerticalScrollBarVisibility="Auto">
                    <TextBox
                        MinHeight="50"
                        Margin="10,0,10,0"
                        materialDesign:HintAssist.Hint="{Binding StringResources.TheAnswerWillBeDisplayedHere, Mode=OneTime}"
                        AcceptsReturn="True"
                        FontSize="12"
                        IsReadOnly="True"
                        Text="{Binding ResultText, Mode=OneWay}"
                        TextWrapping="{x:Static commonModel:ClipboardAppConfig.TextWrapping}" />
                </ScrollViewer>
                <GridSplitter
                    Grid.Row="1"
                    Height="5"
                    HorizontalAlignment="Stretch"
                    Background="Gray"
                    ShowsPreview="True" />
                <ScrollViewer
                    Grid.Row="2"
                    Margin="0,0,0,0"
                    VerticalScrollBarVisibility="Auto">
                    <TextBox
                        MinHeight="50"
                        Margin="10,0,10,0"
                        materialDesign:HintAssist.Hint="{Binding StringResources.EnterYourQuestionHere, Mode=OneTime}"
                        AcceptsReturn="True"
                        FontSize="12"
                        Text="{Binding InputText, UpdateSourceTrigger=PropertyChanged}"
                        TextWrapping="{x:Static commonModel:ClipboardAppConfig.TextWrapping}">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Escape" Command="{Binding CloseCommand, Mode=OneTime}" />
                        </TextBox.InputBindings>
                    </TextBox>
                </ScrollViewer>
            </Grid>
        </Grid>
        <Border
            Grid.Row="1"
            Margin="0,0,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            BorderBrush="Gray"
            BorderThickness="1" />
        <StackPanel
            Grid.Row="4"
            Margin="0,0,0,0"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                Margin="10,10,10,10"
                Command="{Binding SaveCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                Content="{Binding StringResources.Save}" />
            <Button
                Margin="10,10,10,10"
                Command="{Binding SendChatCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                Content="{Binding StringResources.Send}" />
            <Button
                Margin="10,10,10,10"
                Command="{Binding ClearChatCommand}"
                Content="{Binding StringResources.Clear}" />
            <Button
                Margin="10,10,10,10"
                Command="{Binding CloseCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                Content="{Binding StringResources.Close}" />
        </StackPanel>
        <cc:MyStatusBar Grid.Row="5" VerticalAlignment="Bottom" />
        <ProgressBar
            Grid.Row="2"
            IsIndeterminate="{Binding IsIndeterminate}"
            Style="{StaticResource MaterialDesignCircularProgressBar}"
            Value="0" />

    </Grid>
</Window>
