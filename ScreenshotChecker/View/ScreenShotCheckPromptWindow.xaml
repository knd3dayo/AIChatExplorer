<Window
    x:Class="ImageChat.View.ScreenShotCheckPromptWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="clr-namespace:WpfAppCommon.Control;assembly=WpfAppCommon"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:ImageChat.ViewModel"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="root"
    Title="{Binding StringResources.ScreenShotCheckPromptWindowTitle}"
    Width="800"
    Height="450"
    mc:Ignorable="d">
    <Window.Resources>
        <Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="Auto" />
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <local:ScreenShotCheckPromptWindowViewModel x:Name="datacontext" />
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel
            Grid.Row="0"
            Margin="0,0,0,0"
            Orientation="Vertical">
            <materialDesign:ColorZone
                materialDesign:ElevationAssist.Elevation="Dp4"
                DockPanel.Dock="Top"
                Mode="PrimaryMid">
                <Menu
                    Name="menu1"
                    Margin="0,0,0,0"
                    materialDesign:MenuAssist.TopLevelMenuItemHeight="18"
                    IsMainMenu="False">
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="" />
                </Menu>

            </materialDesign:ColorZone>
        </StackPanel>
        <DataGrid
            Name="ScreenShotCheckDataGrid"
            Grid.Row="1"
            Margin="10,0,10,0"
            AutoGenerateColumns="False"
            BorderThickness="1"
            CanUserAddRows="True"
            CanUserDeleteRows="True"
            CanUserReorderColumns="False"
            CanUserResizeColumns="True"
            CanUserResizeRows="False"
            CanUserSortColumns="True"
            ItemsSource="{Binding ScreenShotCheckItems}"
            RowHeaderWidth="0"
            SelectionMode="Single"
            SelectionUnit="FullRow"
            VerticalScrollBarVisibility="Auto">
            <DataGrid.Columns>
                <DataGridTextColumn
                    Width="300"
                    Binding="{Binding SettingItem, UpdateSourceTrigger=PropertyChanged}"
                    Header="設定項目" />
                <DataGridTextColumn
                    Width="300"
                    Binding="{Binding SettingValue, UpdateSourceTrigger=PropertyChanged}"
                    Header="設定値" />
                <DataGridComboBoxColumn
                    Width="Auto"
                    DisplayMemberPath="CheckTypeString"
                    Header="チェックタイプ"
                    SelectedValueBinding="{Binding CheckType, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.CheckTypeList, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.CheckTypeList, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <!--  貼り付け  -->
                    <MenuItem Command="{Binding PasteDataGridCommand}" Header="貼り付け" />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <DockPanel
                Grid.Column="0"
                Margin="10,0,0,10"
                HorizontalAlignment="Left">
                <Button
                    Width="100"
                    Margin="10,0,0,0"
                    Command="{Binding ClearCommand}"
                    Content="クリア" />
            </DockPanel>
            <DockPanel
                Grid.Column="1"
                Margin="10,0,0,10"
                HorizontalAlignment="Right">
                <Button
                    Width="100"
                    Margin="10,0,20,0"
                    Command="{Binding OKCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="OK" />
                <Button
                    Width="100"
                    Margin="10,0,20,0"
                    Command="{Binding CloseCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="キャンセル"
                    DockPanel.Dock="Right" />
            </DockPanel>
        </Grid>
        <cc:MyStatusBar Grid.Row="3" VerticalAlignment="Bottom" />
    </Grid>
</Window>
