<UserControl
    x:Class="LibUINormalChat.View.NormalChatControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commonModel="clr-namespace:LibUIPythonAI.Resource;assembly=LibUIPythonAI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editorControl="clr-namespace:LibUIPythonAI.Control.Editor;assembly=LibUIPythonAI"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:LibUINormalChat.View"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:LibUINormalChat.ViewModel"
    xmlns:res="clr-namespace:LibUINormalChat.View"
    x:Name="Root"
    d:DataContext="{d:DesignInstance Type=model:NormalChatControlViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="25" />
        </Style>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.InputBindings>
        <KeyBinding
            Key="Escape"
            Command="{Binding CloseCommand, Mode=OneTime}"
            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
    </UserControl.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TabControl
            Grid.Row="0"
            Margin="10,5,10,5"
            HorizontalContentAlignment="Left">
            <TabItem
                Width="Auto"
                Height="Auto"
                Margin="10,0,10,0"
                Padding="0"
                FontSize="10"
                Header="{x:Static res:ViewStringResources.Chat}">

                <Grid Background="White">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="280" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <local:NormalChatContextPanel Grid.Column="0" DataContext="{Binding}" />
                    <GridSplitter Grid.Column="1" Width="5" />
                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ListBox
                            x:Name="ChatContentList"
                            Grid.Row="0"
                            ItemsSource="{Binding ChatHistoryViewModel.ChatHistory, Mode=OneWay}"
                            ScrollViewer.CanContentScroll="False"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            SelectedItem="{Binding SelectedItem}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <materialDesign:Card
                                        Margin="10,10,10,10"
                                        HorizontalAlignment="Stretch"
                                        materialDesign:ElevationAssist.Elevation="Dp6">
                                        <Grid Margin="0,0,0,0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto" />
                                                <RowDefinition Height="auto" />
                                            </Grid.RowDefinitions>
                                            <!--  ロール名  -->
                                            <TextBlock
                                                Grid.Row="0"
                                                Margin="10,5,10,5"
                                                HorizontalAlignment="Left"
                                                FontSize="8pt"
                                                Text="{Binding Role, Mode=OneWay}" />
                                            <!--  コンテンツ  -->
                                            <TextBlock
                                                Grid.Row="1"
                                                MinHeight="30"
                                                Margin="10,5,10,5"
                                                HorizontalAlignment="Left"
                                                FontSize="8pt"
                                                Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}"
                                                Text="{Binding ContentWithSources, Mode=OneWay}"
                                                TextTrimming="WordEllipsis"
                                                Visibility="{Binding DataContext.TextVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" />
                                            <editorControl:BindableRichTextBox
                                                Grid.Row="1"
                                                Margin="10,10,10,10"
                                                VerticalContentAlignment="Top"
                                                Document="{Binding MarkdownContentWithSources, Mode=OneWay}"
                                                FontSize="12"
                                                HorizontalScrollBarVisibility="Auto"
                                                IsReadOnly="True"
                                                VerticalScrollBarVisibility="Auto"
                                                Visibility="{Binding DataContext.MarkdownVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="PreviewMouseUp">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.OpenChatItemCommand, ElementName=Root}" CommandParameter="{Binding}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </editorControl:BindableRichTextBox>
                                            <Grid.InputBindings>
                                                <!--  ダブルクリックしたらEditChatItemWindowを開く  -->
                                                <MouseBinding
                                                    Command="{Binding DataContext.OpenChatItemCommand, ElementName=Root}"
                                                    CommandParameter="{Binding}"
                                                    MouseAction="LeftDoubleClick" />
                                            </Grid.InputBindings>
                                            <Grid.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Command="{Binding PlacementTarget.Tag.ExportChatCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" Header="{Binding PlacementTarget.Tag.StringResources.ExportAllChatContents, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                                                    <MenuItem
                                                        Command="{Binding PlacementTarget.Tag.CopySelectedChatItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                        CommandParameter="{Binding}"
                                                        Header="{Binding PlacementTarget.Tag.StringResources.CopySelectedChatContents, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                                                    <MenuItem Command="{Binding PlacementTarget.Tag.CopyAllChatItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" Header="{Binding PlacementTarget.Tag.StringResources.CopyAllChatContents, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                                                </ContextMenu>
                                            </Grid.ContextMenu>
                                        </Grid>
                                    </materialDesign:Card>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        <GridSplitter
                            Grid.Row="1"
                            Height="5"
                            Margin="0,0,0,0"
                            HorizontalAlignment="Stretch" />
                        <Grid Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <!--  プロンプトテンプレート  -->
                            <ScrollViewer
                                Grid.Row="0"
                                Margin="0,0,0,0"
                                VerticalScrollBarVisibility="Auto">
                                <TextBox
                                    Height="60"
                                    Margin="10,0,10,0"
                                    materialDesign:HintAssist.Hint="{x:Static res:ViewStringResources.PromptTemplate}"
                                    AcceptsReturn="True"
                                    Text="{Binding PromptText, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.InputBindings>
                                        <MouseBinding Command="{Binding PromptTemplateCommand, Mode=OneTime}" MouseAction="LeftDoubleClick" />
                                    </TextBox.InputBindings>
                                </TextBox>
                            </ScrollViewer>
                            <ScrollViewer
                                Grid.Row="1"
                                Margin="0,0,0,0"
                                VerticalScrollBarVisibility="Auto">
                                <editorControl:MyTextBox
                                    MinHeight="50"
                                    Margin="10,0,10,0"
                                    materialDesign:HintAssist.Hint="{x:Static res:ViewStringResources.EnterYourQuestionHere}"
                                    AcceptsReturn="True"
                                    Text="{Binding InputText, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrappingMode="{Binding CommonViewModelProperties.TextWrappingMode}" />
                            </ScrollViewer>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
            <!--  参照アイテム  -->
            <TabItem
                Width="Auto"
                Height="Auto"
                Margin="10,0,10,0"
                Padding="0"
                Background="White"
                FontSize="10"
                Header="{x:Static res:ViewStringResources.ItemSelection}">
                <TabControl Margin="10,5,10,5" HorizontalContentAlignment="Left">

                    <!--  参照するアイテム選択  -->
                    <TabItem
                        Width="Auto"
                        Height="Auto"
                        Margin="10,0,10,0"
                        Padding="0"
                        Background="White"
                        FontSize="10"
                        Header="{x:Static res:ViewStringResources.ItemSelection}">
                        <local:RelatedItemsPanel DataContext="{Binding RelatedItemsPanelViewModel}" />
                    </TabItem>
                    <!--  参照するデータ選択  -->
                    <TabItem
                        Width="Auto"
                        Height="Auto"
                        Margin="10,0,10,0"
                        Padding="0"
                        FontSize="10"
                        Header="{x:Static res:ViewStringResources.TargetDataSelection}">
                        <Grid Background="White">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--  エクスポート用のDataGrid Checkbox(IsCheckd、DisplayText）を表示  -->
                            <DataGrid
                                Grid.Row="0"
                                Margin="10,10,10,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                AutoGenerateColumns="False"
                                Background="White"
                                ItemsSource="{Binding DataDefinitions}"
                                SelectionMode="Single">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="{x:Static res:ViewStringResources.Select}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox Content="{Binding DisplayText}" IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                </TabControl>
            </TabItem>
            <!--  表示  -->
            <TabItem
                Width="Auto"
                Height="Auto"
                Margin="10,0,10,0"
                Padding="0"
                Background="White"
                FontSize="10"
                Header="{x:Static res:ViewStringResources.View}">
                <TabControl Margin="10,5,10,5" HorizontalContentAlignment="Left">
                    <!--  参照アイテム一覧  -->
                    <TabItem
                        Width="Auto"
                        Height="Auto"
                        Margin="10,0,10,0"
                        Padding="0"
                        Background="White"
                        FontSize="10"
                        Header="{x:Static res:ViewStringResources.ReferenceItemList}">
                        <local:RelatedItemsDataGrid Grid.Row="0" DataContext="{Binding RelatedItemSummaryDataGridViewModel}" />
                    </TabItem>
                    <!--  リクエストパラメーター  -->
                    <TabItem
                        Margin="10,0,10,0"
                        Padding="0"
                        FontSize="10"
                        Header="{x:Static res:ViewStringResources.RequestParameterJson}">
                        <ScrollViewer VerticalAlignment="Top" VerticalScrollBarVisibility="Auto">
                            <TextBox
                                Margin="10,10,10,10"
                                VerticalAlignment="Top"
                                Text="{Binding PreviewJson, Mode=OneWay}" />
                        </ScrollViewer>
                    </TabItem>
                    <!--  デバッグ用のコマンド生成  -->
                    <TabItem
                        Width="Auto"
                        Height="Auto"
                        Margin="10,0,10,0"
                        Padding="0"
                        FontSize="10"
                        Header="{x:Static res:ViewStringResources.GenerateDebugCommand}">
                        <ScrollViewer VerticalAlignment="Top" VerticalScrollBarVisibility="Auto">
                            <TextBox
                                Margin="10,10,10,10"
                                VerticalAlignment="Top"
                                Text="{Binding GeneratedDebugCommand, Mode=OneWay}" />
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </TabItem>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding TabSelectionChangedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TabControl>
        <!--  フッター部分  -->
        <Grid Grid.Row="1" Background="White">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel
                Grid.Column="0"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <Button
                    Margin="10,0,10,5"
                    Command="{Binding SendChatCommand, Mode=OneTime}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="{x:Static res:ViewStringResources.Send}" />
                <Button
                    Margin="10,0,10,5"
                    Command="{Binding CloseCommand, Mode=OneTime}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="{x:Static res:ViewStringResources.Close}" />
            </StackPanel>
        </Grid>
        <ProgressBar
            Grid.Row="0"
            IsIndeterminate="{Binding CommonViewModelProperties.IsIndeterminate}"
            Style="{StaticResource MaterialDesignCircularProgressBar}"
            Value="0" />
    </Grid>
</UserControl>
