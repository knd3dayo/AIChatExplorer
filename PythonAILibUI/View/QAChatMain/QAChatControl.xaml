<UserControl
    x:Class="QAChat.View.QAChatMain.QAChatControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commonModel="clr-namespace:QAChat.Resource"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editorControl="clr-namespace:WpfAppCommon.Control.Editor;assembly=WpfAppCommon"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:QAChat.ViewModel.QAChatMain"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:qaChatControl="clr-namespace:QAChat.View.QAChatMain"
    xmlns:res="clr-namespace:QAChat.View.QAChatMain"
    x:Name="Root"
    d:DataContext="{d:DesignInstance Type=local:QAChatControlViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="25" />
        </Style>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.InputBindings>
        <KeyBinding
            Key="Escape"
            Command="{Binding CloseCommand, Mode=OneTime}"
            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
    </UserControl.InputBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="280" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid
            Grid.Column="0"
            Width="250"
            Margin="10,10,10,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!--  共通設定  -->
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock
                    Grid.Row="0"
                    Margin="10,0,10,5"
                    Text="{x:Static res:ViewStringResources.Setting}" />
                <Separator Grid.Row="1" />
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        Margin="10,0,10,0"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="{x:Static res:ViewStringResources.ChatMode}" />
                    <ComboBox
                        Grid.Column="1"
                        Margin="10,0,10,0"
                        SelectedIndex="{Binding ChatMode}">
                        <ComboBoxItem Content="{x:Static res:ViewStringResources.ChatMode_OpenAI}" />
                        <ComboBoxItem Content="{x:Static res:ViewStringResources.ChatMode_OpenAI_RAG}" />
                        <ComboBoxItem Content="{x:Static res:ViewStringResources.ChatMode_AutoGen_GroupChat}" />
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding ChatModeSelectionChangedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>
                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        Margin="10,0,10,0"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="{x:Static res:ViewStringResources.SplitMode}" />
                    <ComboBox
                        Grid.Column="1"
                        Margin="10,0,10,0"
                        SelectedIndex="{Binding SplitMode}">
                        <ComboBoxItem Content="{x:Static res:ViewStringResources.SplitMode_None}" />
                        <ComboBoxItem Content="{x:Static res:ViewStringResources.SplitMode_SplitIfExceedSpecifiedToken}" />
                        <ComboBoxItem Content="{x:Static res:ViewStringResources.SplitMode_SplitAndSummarizeIfExceedSpecifiedToken}" />
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding SplitModeSelectionChangedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>
                <Grid
                    Grid.Row="4"
                    Margin="10,20,0,10"
                    HorizontalAlignment="Left"
                    Visibility="{Binding SplitMOdeVisibility}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="170" />
                        <ColumnDefinition Width="80" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static res:ViewStringResources.NumberOfTokensToSplitRequest}" />
                    <!--  書式は整数  -->
                    <TextBox
                        Grid.Column="1"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding SplitTokenCount, StringFormat=N0, UpdateSourceTrigger=PropertyChanged}" />

                </Grid>
                <Grid
                    Grid.Row="5"
                    Margin="10,20,0,10"
                    HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="130" />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="Templature" />
                    <Slider
                        Grid.Column="1"
                        Margin="10,0,0,0"
                        Maximum="1"
                        Minimum="0"
                        TickFrequency="0.1"
                        TickPlacement="BottomRight"
                        Value="{Binding Temperature}" />
                    <TextBlock
                        Grid.Column="2"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding Temperature, StringFormat={}{0:F2}}" />
                </Grid>
                <Separator Grid.Row="6" />
            </Grid>
            <!--  ベクトルDB設定  -->
            <Grid Grid.Row="1" Visibility="{Binding VectorDBItemVisibility}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel
                    Grid.Row="0"
                    Margin="10,20,0,10"
                    HorizontalAlignment="Left">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                FontWeight="Bold"
                                Text="{x:Static res:ViewStringResources.VectorDB}" />
                            <TextBlock
                                Grid.Column="1"
                                Margin="10,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="10"
                                Text="{x:Static res:ViewStringResources.ClickHereToAddVectorDB}">
                                <TextBlock.InputBindings>
                                    <MouseBinding Command="{Binding AddVectorDBItemCommand, Mode=OneTime}" MouseAction="LeftClick" />
                                </TextBlock.InputBindings>
                            </TextBlock>
                        </Grid>
                        <ListBox
                            Grid.Row="1"
                            Margin="0,10,0,10"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            ItemsSource="{Binding VectorSearchProperties}"
                            SelectedItem="{Binding SelectedVectorSearchProperty}">
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="Margin" Value="0,1,0,1" />
                                    <Setter Property="Padding" Value="0" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DisplayText}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding RemoveVectorDBItemCommand, Mode=OneTime}" Header="{Binding StringResources.ExcludeFromList, Mode=OneTime}" />
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                    </Grid>
                </StackPanel>
                <Separator Grid.Row="3" />
                <!--  ベクトルDB検索結果最大値  -->
                <Grid
                    Grid.Row="2"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="180" />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="{x:Static res:ViewStringResources.VectorDBSearchResultMax}" />
                    <TextBox
                        Grid.Column="1"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding VectorDBSearchResultMax}" />
                </Grid>

            </Grid>
            <!--  AutoGen  -->
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!--  AutoGenGroupChat  -->
                <Grid
                    Grid.Row="0"
                    Margin="10,20,0,10"
                    HorizontalAlignment="Left"
                    Visibility="{Binding AutoGenGroupChatVisibility}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="{x:Static res:ViewStringResources.GroupChatName}" />
                    <ComboBox
                        Grid.Row="0"
                        Grid.Column="1"
                        Width="200"
                        Margin="10,0,0,0"
                        DisplayMemberPath="Name"
                        ItemsSource="{Binding AutoGenGroupChatList}"
                        SelectedItem="{Binding SelectedAutoGenGroupChat}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding AutoGenGroupChatSelectionChangedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <!--  Terminate Message  -->
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="{x:Static res:ViewStringResources.TerminateMessage}" />
                    <TextBox
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding TerminateMsg}" />
                    <!--  MaxMsg  -->
                    <TextBlock
                        Grid.Row="2"
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="{x:Static res:ViewStringResources.MaxMsg}" />
                    <TextBox
                        Grid.Row="2"
                        Grid.Column="1"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding MaxMsg}" />
                    <!--  Timeout  -->
                    <TextBlock
                        Grid.Row="3"
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="{x:Static res:ViewStringResources.Timeout}" />
                    <TextBox
                        Grid.Row="3"
                        Grid.Column="1"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding Timeout}" />
                </Grid>
            </Grid>
        </Grid>
        <GridSplitter Grid.Column="1" Width="5" />
        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TabControl
                Grid.Row="0"
                Margin="10,5,10,5"
                HorizontalContentAlignment="Left">
                <TabItem
                    Width="Auto"
                    Height="Auto"
                    Margin="10,0,10,0"
                    Padding="0"
                    FontSize="10"
                    Header="{Binding StringResources.Chat, Mode=OneTime}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ListBox
                            x:Name="ChatContentList"
                            Grid.Row="0"
                            ItemsSource="{Binding ChatHistory, Mode=OneWay}"
                            ScrollViewer.CanContentScroll="False"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            SelectedItem="{Binding SelectedItem}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <materialDesign:Card
                                        Margin="10,10,10,10"
                                        HorizontalAlignment="Stretch"
                                        materialDesign:ElevationAssist.Elevation="Dp6">
                                        <Grid Margin="0,0,0,0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto" />
                                                <RowDefinition Height="auto" />
                                            </Grid.RowDefinitions>
                                            <!--  ロール名  -->
                                            <TextBlock
                                                Grid.Row="0"
                                                Margin="10,5,10,5"
                                                HorizontalAlignment="Left"
                                                FontSize="8pt"
                                                Text="{Binding Role, Mode=OneWay}" />
                                            <!--  コンテンツ  -->
                                            <TextBlock
                                                Grid.Row="1"
                                                MinHeight="30"
                                                Margin="10,5,10,5"
                                                HorizontalAlignment="Left"
                                                FontSize="8pt"
                                                Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}"
                                                Text="{Binding ContentWithSources, Mode=OneWay}"
                                                TextTrimming="WordEllipsis" />
                                            <Grid.InputBindings>
                                                <!--  ダブルクリックしたらEditChatItemWindowを開く  -->
                                                <MouseBinding
                                                    Command="{Binding DataContext.OpenChatItemCommand, ElementName=Root}"
                                                    CommandParameter="{Binding}"
                                                    MouseAction="LeftDoubleClick" />
                                            </Grid.InputBindings>
                                            <Grid.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Command="{Binding PlacementTarget.Tag.ExportChatCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" Header="{Binding PlacementTarget.Tag.StringResources.ExportAllChatContents, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                                                    <MenuItem
                                                        Command="{Binding PlacementTarget.Tag.CopySelectedChatItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                        CommandParameter="{Binding}"
                                                        Header="{Binding PlacementTarget.Tag.StringResources.CopySelectedChatContents, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                                                    <MenuItem Command="{Binding PlacementTarget.Tag.CopyAllChatItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" Header="{Binding PlacementTarget.Tag.StringResources.CopyAllChatContents, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                                                </ContextMenu>
                                            </Grid.ContextMenu>
                                        </Grid>
                                    </materialDesign:Card>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        <GridSplitter
                            Grid.Row="1"
                            Height="5"
                            Margin="0,0,0,0"
                            HorizontalAlignment="Stretch" />
                        <Grid Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <!--  プロンプトテンプレート  -->
                            <ScrollViewer
                                Grid.Row="0"
                                Margin="0,0,0,0"
                                VerticalScrollBarVisibility="Auto">
                                <TextBox
                                    Height="60"
                                    Margin="10,0,10,0"
                                    materialDesign:HintAssist.Hint="{x:Static res:ViewStringResources.PromptTemplate}"
                                    AcceptsReturn="True"
                                    Text="{Binding PromptText, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.InputBindings>
                                        <MouseBinding Command="{Binding PromptTemplateCommand, Mode=OneTime}" MouseAction="LeftDoubleClick" />
                                    </TextBox.InputBindings>
                                </TextBox>
                            </ScrollViewer>
                            <ScrollViewer
                                Grid.Row="1"
                                Margin="0,0,0,0"
                                VerticalScrollBarVisibility="Auto">
                                <editorControl:MyTextBox
                                    MinHeight="50"
                                    Margin="10,0,10,0"
                                    materialDesign:HintAssist.Hint="{x:Static res:ViewStringResources.EnterYourQuestionHere}"
                                    AcceptsReturn="True"
                                    Text="{Binding InputText, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrappingMode="{Binding TextWrappingMode}" />
                            </ScrollViewer>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem
                    Margin="10,0,10,0"
                    Padding="0"
                    FontSize="10"
                    Header="{x:Static res:ViewStringResources.RequestParameterJson}">
                    <ScrollViewer VerticalAlignment="Top" VerticalScrollBarVisibility="Auto">
                        <TextBox
                            Margin="10,10,10,10"
                            VerticalAlignment="Top"
                            Text="{Binding PreviewJson, Mode=OneWay}"
                            TextWrapping="{Binding TextWrapping, Mode=OneWay}" />
                    </ScrollViewer>
                </TabItem>
                <TabItem
                    Width="Auto"
                    Height="Auto"
                    Margin="10,0,10,0"
                    Padding="0"
                    FontSize="10"
                    Header="{x:Static res:ViewStringResources.GenerateDebugCommand}">
                    <ScrollViewer VerticalAlignment="Top" VerticalScrollBarVisibility="Auto">
                        <TextBox
                            Margin="10,10,10,10"
                            VerticalAlignment="Top"
                            Text="{Binding GeneratedDebugCommand, Mode=OneWay}"
                            TextWrapping="{Binding TextWrapping, Mode=OneWay}" />
                    </ScrollViewer>
                </TabItem>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding TabSelectionChangedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TabControl>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel
                    Grid.Column="0"
                    HorizontalAlignment="Left"
                    Orientation="Horizontal"
                    Visibility="{Binding DebugCommandVisibility}">
                    <Button
                        Margin="10,0,10,5"
                        Command="{Binding DebugCommand, Mode=OneTime}"
                        Content="{x:Static res:ViewStringResources.ExecuteDebugCommand}" />
                </StackPanel>
                <StackPanel
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <Button
                        Margin="10,0,10,5"
                        Command="{Binding SendChatCommand, Mode=OneTime}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                        Content="{x:Static res:ViewStringResources.Send}" />
                    <Button
                        Margin="10,0,10,5"
                        Command="{Binding ClearChatContentsCommand, Mode=OneTime}"
                        Content="{x:Static res:ViewStringResources.ClearChatContents}" />
                    <Button
                        Margin="10,0,10,5"
                        Command="{Binding ClearInputTextCommand, Mode=OneTime}"
                        Content="{x:Static res:ViewStringResources.ClearContent}" />
                    <Button
                        Margin="10,0,10,5"
                        Command="{Binding ReloadInputTextCommand, Mode=OneTime}"
                        Content="{x:Static res:ViewStringResources.ReloadContent}" />
                    <Button
                        Margin="10,0,10,5"
                        Command="{Binding SaveCommand, Mode=OneTime}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                        Content="{x:Static res:ViewStringResources.Save}" />
                    <Button
                        Margin="10,0,10,5"
                        Command="{Binding CloseCommand, Mode=OneTime}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                        Content="{x:Static res:ViewStringResources.Close}" />
                </StackPanel>
            </Grid>
            <ProgressBar
                Grid.Row="0"
                IsIndeterminate="{Binding IsIndeterminate}"
                Style="{StaticResource MaterialDesignCircularProgressBar}"
                Value="0" />

        </Grid>
    </Grid>
</UserControl>
