<UserControl
    x:Class="AIChatExplorer.View.Main.MainPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commonModel="clr-namespace:LibUIPythonAI.Resource;assembly=LibUIPythonAI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editorControl="clr-namespace:LibUIPythonAI.Control.Editor;assembly=LibUIPythonAI"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:AIChatExplorer.View.Main"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:res="clr-namespace:AIChatExplorer.View.Main"
    xmlns:viewModel="clr-namespace:AIChatExplorer.ViewModel.Main"
    x:Name="Root"
    d:DataContext="{d:DesignInstance Type=viewModel:MainPanelViewModel}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ContextMenu
            x:Key="GridRowContextMenu"
            FontSize="12"
            ItemsSource="{Binding ContentItemMenuItems}" />
        <Style x:Key="SingleLineTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="Height" Value="15" />
            <Setter Property="TextWrapping" Value="NoWrap" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <!--  TreeView, ListBox  -->
        <Grid.ColumnDefinitions>
            <!--  1. TreeView, 2. GridSplitter, 3. ListBox  -->
            <!--  Insert GridSplitter between TreeView and ListBox  -->
            <ColumnDefinition Width="300" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <!--  Folder TreeView  -->
        <local:MainPanelTreeViewControl Grid.Column="0" DataContext="{Binding MainPanelTreeViewControlViewModel}" />
        <GridSplitter
            Grid.Column="1"
            Width="5"
            HorizontalAlignment="Stretch" />

        <Grid Grid.Column="2">
            <!--  DataGrid, GridSplitter, Preview  -->
            <Grid.RowDefinitions>
                <RowDefinition Height="0.4*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="0.6*" />
            </Grid.RowDefinitions>
            <local:MainPanelDataGridViewControl Grid.Row="0" DataContext="{Binding MainPanelDataGridViewControlViewModel}" />
            <GridSplitter
                Grid.Row="1"
                Height="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center" />
            <materialDesign:Card
                Grid.Row="2"
                Margin="3,3,3,3"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                materialDesign:ElevationAssist.Elevation="Dp8">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBox
                        Name="DescriptionText"
                        Grid.Row="0"
                        Margin="10,10,10,10"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        FontSize="10pt"
                        IsReadOnly="True"
                        Text="{Binding MainPanelDataGridViewControlViewModel.SelectedItem.DescriptionText, Mode=OneWay}" />
                    <!--  TabControl タブ削除時にSelectedIndexのタブがNullとなった場合のため、FallbackValueとTargetNullValueを設定  -->
                    <TabControl
                        x:Name="MyTabControl"
                        Grid.Row="1"
                        Margin="10,3,10,3"
                        HorizontalContentAlignment="Left"
                        ItemsSource="{Binding MainPanelDataGridViewControlViewModel.SelectedItem.TabItems, FallbackValue={x:Null}}"
                        SelectedIndex="{Binding MainPanelDataGridViewControlViewModel.SelectedItem.SelectedTabIndex, TargetNullValue=-1}" />
                    <TextBlock
                        Name="headerText"
                        Grid.Row="2"
                        Margin="10,0,10,10"
                        HorizontalAlignment="Stretch"
                        FontSize="8pt"
                        Text="{Binding Path=MainPanelDataGridViewControlViewModel.SelectedItem.HeaderText}"
                        TextTrimming="None"
                        Visibility="{Binding PropertiesVisibility}" />
                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <CheckBox
                            Grid.Column="0"
                            Margin="10,0,10,10"
                            HorizontalAlignment="Left"
                            Content="{x:Static res:ViewStringResources.MarkdownView}"
                            FontSize="8pt"
                            IsChecked="{Binding CommonViewModelProperties.MarkdownView, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox
                            Grid.Column="1"
                            Margin="10,0,10,10"
                            HorizontalAlignment="Left"
                            Content="{x:Static res:ViewStringResources.ShowProperties}"
                            FontSize="8pt"
                            IsChecked="{Binding ShowProperties}" />
                    </Grid>
                </Grid>
                <materialDesign:Card.InputBindings>
                    <!--  Open selected item window by double-clicking  -->
                    <MouseBinding
                        Command="{Binding MainPanelDataGridViewControlViewModel.OpenSelectedItemCommand}"
                        CommandParameter="{Binding}"
                        MouseAction="LeftDoubleClick" />
                </materialDesign:Card.InputBindings>
            </materialDesign:Card>
        </Grid>
    </Grid>
</UserControl>
