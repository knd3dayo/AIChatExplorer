<Window
    x:Class="QAChat.View.VectorDB.ListVectorDBWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="clr-namespace:QAChat.View.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:folderView="clr-namespace:QAChat.View.Folder"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:QAChat.ViewModel.VectorDB"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:res="clr-namespace:QAChat.View.VectorDB"
    Title="{x:Static res:ViewStringResources.ListVectorDBWindowTitle}"
    Width="800"
    Height="450"
    d:DataContext="{d:DesignInstance Type=local:ListVectorDBWindowViewModel}"
    mc:Ignorable="d">

    <Window.Resources>
        <Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="25" />
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding
            Key="Escape"
            Command="{Binding CloseCommand}"
            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel
            Grid.Row="0"
            Margin="0,0,0,0"
            Orientation="Vertical">
            <materialDesign:ColorZone
                materialDesign:ElevationAssist.Elevation="Dp4"
                DockPanel.Dock="Top"
                Mode="PrimaryMid">
                <Menu
                    Name="menu1"
                    Margin="0,0,0,0"
                    materialDesign:MenuAssist.TopLevelMenuItemHeight="18"
                    IsMainMenu="False">
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="" />
                </Menu>
            </materialDesign:ColorZone>
        </StackPanel>
        <TabControl
            Grid.Row="1"
            HorizontalContentAlignment="Left"
            SelectedIndex="{Binding SelectedTabIndex}">
            <TabItem Header="{x:Static res:ViewStringResources.VectorDBList}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel
                        Grid.Row="0"
                        Margin="0,0,0,0"
                        Orientation="Vertical">
                        <CheckBox
                            Margin="10,10,0,0"
                            Content="{x:Static res:ViewStringResources.DisplayVectorsForTheSystem}"
                            IsChecked="{Binding IsShowSystemCommonVectorDB}" />
                    </StackPanel>
                    <ListView
                        Grid.Row="1"
                        ItemsSource="{Binding VectorDBItems}"
                        SelectedItem="{Binding SelectedVectorDBItem}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding EditVectorDBCommand, Mode=OneTime}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="Auto" Header="{x:Static res:ViewStringResources.Enable}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsEnabled}" IsEnabled="False" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
                                    Width="Auto"
                                    DisplayMemberBinding="{Binding Name}"
                                    Header="{x:Static res:ViewStringResources.Name}" />
                                <GridViewColumn
                                    Width="Auto"
                                    DisplayMemberBinding="{Binding VectorDBURL}"
                                    Header="{x:Static res:ViewStringResources.VectorDBLocation}" />
                                <GridViewColumn
                                    Width="Auto"
                                    DisplayMemberBinding="{Binding VectorDBTypeString}"
                                    Header="{x:Static res:ViewStringResources.VectorDBType}" />
                            </GridView>
                        </ListView.View>
                        <!--  コンテキストメニュー  -->
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding EditVectorDBCommand}" Header="{Binding StringResources.Edit, Mode=OneTime}" />
                                <MenuItem Command="{Binding DeleteVectorDBCommand}" Header="{Binding StringResources.Delete, Mode=OneTime}" />
                            </ContextMenu>
                        </ListView.ContextMenu>
                    </ListView>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static res:ViewStringResources.VectorDBFolder}" Visibility="{Binding SelectModeVisibility}">
                <folderView:FolderSelectControl DataContext="{Binding FolderSelectWindowViewModel}" />
            </TabItem>
        </TabControl>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <DockPanel
                Grid.Column="0"
                Margin="10,10,0,10"
                HorizontalAlignment="Left">
                <Button
                    Width="180"
                    Margin="10,0,0,0"
                    Command="{Binding AddVectorDBCommand, Mode=OneTime}"
                    Content="{x:Static res:ViewStringResources.NewVectorDBSetting}" />
                <Button
                    Width="180"
                    Margin="10,0,0,0"
                    Command="{Binding EditVectorDBCommand, Mode=OneTime}"
                    Content="{x:Static res:ViewStringResources.EditVectorDBSetting}" />
            </DockPanel>
            <DockPanel
                Grid.Column="1"
                Margin="10,10,0,10"
                HorizontalAlignment="Right">
                <Button
                    Width="100"
                    Margin="10,0,20,0"
                    Command="{Binding SelectCommand, Mode=OneTime}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="{x:Static res:ViewStringResources.Select}"
                    Visibility="{Binding SelectModeVisibility}" />
                <Button
                    Width="100"
                    Margin="10,0,20,0"
                    Command="{Binding CloseCommand, Mode=OneTime}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="{x:Static res:ViewStringResources.Close}"
                    DockPanel.Dock="Right" />
            </DockPanel>
        </Grid>
        <cc:MyStatusBar Grid.Row="3" VerticalAlignment="Bottom" />
    </Grid>
</Window>
