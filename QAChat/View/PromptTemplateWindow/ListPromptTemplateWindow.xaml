<Window
    x:Class="QAChat.View.PromptTemplateWindow.ListPromptTemplateWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="clr-namespace:WpfAppCommon.Control;assembly=WpfAppCommon"
    xmlns:commonModel="clr-namespace:WpfAppCommon.Model;assembly=WpfAppCommon"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:view="clr-namespace:QAChat.ViewModel"
    Title="{Binding Title}"
    Width="700"
    Height="450"
    mc:Ignorable="d">
    <Window.Resources>
        <commonModel:CommonStringResources x:Key="StringResources" />
        <Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="Auto" />
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <view:ListPromptTemplateWindowViewModel />
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--  メニューバー  -->
        <StackPanel
            Grid.Row="0"
            Margin="0,0,0,0"
            Orientation="Vertical">
            <materialDesign:ColorZone
                materialDesign:ElevationAssist.Elevation="Dp4"
                DockPanel.Dock="Top"
                Mode="PrimaryMid">
                <Menu
                    Name="menu1"
                    Margin="0,0,0,0"
                    materialDesign:MenuAssist.TopLevelMenuItemHeight="18"
                    IsMainMenu="False">
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="" />
                </Menu>

            </materialDesign:ColorZone>
        </StackPanel>
        <!--  プロンプトテンプレート一覧のListBox  -->
        <StackPanel
            Grid.Column="1"
            Margin="10,10,0,0"
            HorizontalAlignment="Left"
            Orientation="Vertical"
            Visibility="{Binding ModeVisibility}">
            <ComboBox materialDesign:HintAssist.Hint="モード" SelectedIndex="{Binding Mode}">
                <ComboBoxItem Content="{Binding Source={StaticResource StringResources}, Path=Instance.Standard}" />
                <ComboBoxItem Content="{Binding Source={StaticResource StringResources}, Path=Instance.RAG}" />
            </ComboBox>
        </StackPanel>

        <ListView
            Grid.Row="2"
            ItemsSource="{Binding PromptItems}"
            SelectedItem="{Binding SelectedPromptItem}">
            <ListView.View>
                <GridView>
                    <GridViewColumn
                        Width="160"
                        DisplayMemberBinding="{Binding Name}"
                        Header="{Binding StringResources.Name}" />
                    <GridViewColumn
                        Width="350"
                        DisplayMemberBinding="{Binding Description}"
                        Header="{Binding StringResources.Description}" />
                </GridView>
            </ListView.View>
            <!--  コンテキストメニュー  -->
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="{Binding EditPromptItemCommand}" Header="{Binding StringResources.Edit}" />
                    <MenuItem Command="{Binding DeletePromptItemCommand}" Header="{Binding StringResources.Delete}" />
                </ContextMenu>
            </ListView.ContextMenu>
        </ListView>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0" HorizontalAlignment="Left">
                <Button
                    Width="180"
                    Margin="10,10,10,10"
                    Command="{Binding AddPromptItemCommand}"
                    Content="{Binding StringResources.NewPromptTemplate}" />
                <Button
                    Width="180"
                    Margin="10,10,10,10"
                    Command="{Binding EditPromptItemCommand}"
                    Content="{Binding StringResources.EditPromptTemplate}" />
            </DockPanel>
            <DockPanel Grid.Column="1" HorizontalAlignment="Right">
                <Button
                    Width="100"
                    Margin="10,10,10,10"
                    Command="{Binding SelectPromptItemCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="{Binding SelectButtonText}"
                    Visibility="{Binding ExecButtonVisibility}" />
                <Button
                    Width="100"
                    Margin="10,10,10,10"
                    Command="{Binding CloseCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="閉じる"
                    DockPanel.Dock="Right" />
            </DockPanel>
        </Grid>
        <cc:MyStatusBar Grid.Row="4" VerticalAlignment="Bottom" />

    </Grid>
</Window>
