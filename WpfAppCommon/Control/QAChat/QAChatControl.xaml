<UserControl
    x:Class="WpfAppCommon.Control.QAChat.QAChatControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:WpfAppCommon.Control.QAChat"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="Root"
    d:DataContext="{d:DesignInstance Type=local:QAChatControlViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="Auto" />
        </Style>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding
            Key="Enter"
            Command="{Binding SendChatCommand, Mode=OneTime}"
            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
        <KeyBinding
            Key="Escape"
            Command="{Binding CloseCommand, Mode=OneTime}"
            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
    </UserControl.InputBindings>

    <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding IsDrawerOpen}" OpenMode="Standard">
        <materialDesign:DrawerHost.LeftDrawerContent>
            <Grid Width="200" Margin="10,10,10,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        Margin="10,0,10,0"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="モード" />
                    <ComboBox
                        Grid.Column="1"
                        Margin="10,0,10,0"
                        SelectedIndex="{Binding Mode}">
                        <ComboBoxItem Content="OpenAI" />
                        <ComboBoxItem Content="LangChain" />
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding ModeSelectionChangedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>
                <StackPanel
                    Grid.Row="1"
                    HorizontalAlignment="Left"
                    Visibility="{Binding VectorDBItemVisibility}">
                    <ToggleButton
                        Name="ベクトルDB"
                        Width="200"
                        Padding="10,0,10,0"
                        HorizontalAlignment="Left"
                        IsChecked="{Binding IsVectorDBDrawerOpen}"
                        Style="{StaticResource MaterialDesignFlatButton}">
                        <DockPanel Width="200">
                            <materialDesign:PackIcon Kind="Menu" />
                            <TextBlock Text="ベクトルDB" />
                        </DockPanel>
                    </ToggleButton>
                    <materialDesign:DrawerHost IsBottomDrawerOpen="{Binding IsVectorDBDrawerOpen}" OpenMode="Standard">
                        <materialDesign:DrawerHost.BottomDrawerContent>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ListBox
                                    Grid.Row="0"
                                    Margin="10,10,10,10"
                                    ItemsSource="{Binding VectorDBItems}"
                                    SelectedItem="{Binding SelectedVectorDBItem}"
                                    Visibility="{Binding VectorDBItemVisibility}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <i:InvokeCommandAction Command="{Binding OpenVectorDBItemCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ListBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Command="{Binding OpenVectorDBItemCommand, Mode=OneTime}" Header="開く" />
                                            <MenuItem Command="{Binding RemoveVectorDBItemCommand, Mode=OneTime}" Header="リストから除外" />
                                        </ContextMenu>
                                    </ListBox.ContextMenu>
                                </ListBox>
                            </Grid>
                        </materialDesign:DrawerHost.BottomDrawerContent>
                    </materialDesign:DrawerHost>
                </StackPanel>
                <StackPanel Grid.Row="2">
                    <ToggleButton
                        Name="追加テキスト"
                        Width="200"
                        Padding="10,0,10,0"
                        HorizontalAlignment="Left"
                        IsChecked="{Binding IsAdditionalContextDrawerOpen}"
                        Style="{StaticResource MaterialDesignFlatButton}">
                        <DockPanel Width="200">
                            <materialDesign:PackIcon Kind="Menu" />
                            <TextBlock Text="追加テキスト" />
                            <DockPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding AdditionalTextClearCommand, Mode=OneTime}" Header="クリア" />
                                    <MenuItem Command="{Binding AdditionalTextAddFromFolderCommand, Mode=OneTime}" Header="選択中のフォルダのアイテムを追加" />
                                    <MenuItem Command="{Binding AdditionalTextAddFromSearchCommand, Mode=OneTime}" Header="検索したアイテムを追加" />
                                </ContextMenu>
                            </DockPanel.ContextMenu>
                        </DockPanel>
                    </ToggleButton>
                    <materialDesign:DrawerHost IsBottomDrawerOpen="{Binding IsAdditionalContextDrawerOpen}" OpenMode="Standard">
                        <materialDesign:DrawerHost.BottomDrawerContent>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ListBox
                                    Grid.Row="0"
                                    Margin="10,10,10,10"
                                    ItemsSource="{Binding AdditionalTextItems}"
                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                    SelectedItem="{Binding SelectedContextItem}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock FontSize="8" Text="{Binding HeaderText}" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <i:InvokeCommandAction Command="{Binding OpenClipboardItemCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ListBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Command="{Binding OpenClipboardItemCommand, Mode=OneTime}" Header="開く" />
                                            <MenuItem Command="{Binding RemoveClipboardItemCommand, Mode=OneTime}" Header="リストから除外" />
                                        </ContextMenu>
                                    </ListBox.ContextMenu>
                                </ListBox>
                            </Grid>
                        </materialDesign:DrawerHost.BottomDrawerContent>
                    </materialDesign:DrawerHost>
                </StackPanel>
                <StackPanel Grid.Row="3">
                    <ToggleButton
                        Name="追加画像"
                        Width="200"
                        Padding="10,0,10,0"
                        HorizontalAlignment="Left"
                        IsChecked="{Binding IsAdditionalImageDrawerOpen}"
                        Style="{StaticResource MaterialDesignFlatButton}">
                        <DockPanel Width="200">
                            <materialDesign:PackIcon Kind="Menu" />
                            <TextBlock Text="追加画像" />
                            <DockPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding AdditionalImageClearCommand, Mode=OneTime}" Header="クリア" />
                                    <MenuItem Command="{Binding AdditionalImageAddFromFolderCommand, Mode=OneTime}" Header="選択中のフォルダのアイテムを追加" />
                                    <MenuItem Command="{Binding AdditionalImageAddFromSearchCommand, Mode=OneTime}" Header="検索したアイテムを追加" />
                                </ContextMenu>
                            </DockPanel.ContextMenu>

                        </DockPanel>
                    </ToggleButton>
                    <materialDesign:DrawerHost IsBottomDrawerOpen="{Binding IsAdditionalImageDrawerOpen}" OpenMode="Standard">
                        <!--  追加画像情報  -->
                        <materialDesign:DrawerHost.BottomDrawerContent>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ListBox
                                    Grid.Row="0"
                                    Margin="10,10,10,10"
                                    ItemsSource="{Binding AdditionalImageItems}"
                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                    SelectedItem="{Binding SelectedContextItem}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock FontSize="8" Text="{Binding HeaderText}" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <i:InvokeCommandAction Command="{Binding OpenClipboardItemCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ListBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Command="{Binding OpenClipboardItemCommand, Mode=OneTime}" Header="開く" />
                                            <MenuItem Command="{Binding RemoveClipboardItemCommand, Mode=OneTime}" Header="リストから除外" />
                                        </ContextMenu>
                                    </ListBox.ContextMenu>
                                </ListBox>
                            </Grid>

                        </materialDesign:DrawerHost.BottomDrawerContent>
                    </materialDesign:DrawerHost>
                </StackPanel>

            </Grid>
        </materialDesign:DrawerHost.LeftDrawerContent>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TabControl
                Grid.Row="0"
                Margin="10,5,10,5"
                HorizontalContentAlignment="Left">
                <TabItem
                    Width="Auto"
                    Height="Auto"
                    Margin="10,0,10,0"
                    Padding="0"
                    FontSize="10"
                    Header="チャット">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5*" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="20" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ListBox
                            Grid.Row="0"
                            ItemsSource="{Binding ChatHistory, Mode=OneWay}"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            SelectedItem="{Binding SelectedItem}">

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <materialDesign:Card
                                        Margin="10,10,10,10"
                                        HorizontalAlignment="Stretch"
                                        materialDesign:ElevationAssist.Elevation="Dp6">
                                        <Grid Margin="0,0,0,0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto" />
                                                <RowDefinition Height="50" />
                                            </Grid.RowDefinitions>
                                            <TextBlock
                                                Grid.Row="0"
                                                Margin="10,5,10,5"
                                                HorizontalAlignment="Left"
                                                FontSize="8pt"
                                                Text="{Binding Role, Mode=OneWay}" />
                                            <TextBlock
                                                Grid.Row="1"
                                                MinHeight="30"
                                                Margin="10,5,10,5"
                                                HorizontalAlignment="Left"
                                                FontSize="8pt"
                                                Text="{Binding ContentWithSources, Mode=OneWay}"
                                                TextTrimming="CharacterEllipsis">
                                                <TextBlock.InputBindings>
                                                    <!--  ダブルクリックしたらEditChatItemWindowを開く  -->
                                                    <MouseBinding
                                                        Command="{Binding DataContext.OpenChatItemCommand, ElementName=Root}"
                                                        CommandParameter="{Binding}"
                                                        MouseAction="LeftDoubleClick" />
                                                </TextBlock.InputBindings>
                                            </TextBlock>
                                        </Grid>
                                    </materialDesign:Card>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        <GridSplitter
                            Grid.Row="1"
                            Height="5"
                            Margin="0,0,0,0"
                            HorizontalAlignment="Stretch" />

                        <ScrollViewer
                            Grid.Row="2"
                            Margin="0,0,0,0"
                            VerticalScrollBarVisibility="Auto">
                            <TextBox
                                MinHeight="20"
                                Margin="10,0,10,0"
                                materialDesign:HintAssist.Hint="プロンプトテンプレート。ダブルクリックするとプロンプトテンプレート選択画面が開きます。"
                                AcceptsReturn="True"
                                Text="{Binding PromptText, UpdateSourceTrigger=PropertyChanged}">
                                <TextBox.InputBindings>
                                    <MouseBinding Command="{Binding PromptTemplateCommand, Mode=OneTime}" MouseAction="LeftDoubleClick" />
                                </TextBox.InputBindings>
                            </TextBox>
                        </ScrollViewer>
                        <GridSplitter
                            Grid.Row="3"
                            Height="5"
                            Margin="0,0,0,0"
                            HorizontalAlignment="Stretch" />
                        <ScrollViewer
                            Grid.Row="4"
                            Margin="0,0,0,0"
                            VerticalScrollBarVisibility="Auto">
                            <TextBox
                                MinHeight="50"
                                Margin="10,0,10,0"
                                materialDesign:HintAssist.Hint="ここに質問を入力"
                                AcceptsReturn="True"
                                Text="{Binding InputText, UpdateSourceTrigger=PropertyChanged}">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding SendChatCommand, Mode=OneTime}" />
                                    <KeyBinding Key="Escape" Command="{Binding CloseCommand, Mode=OneTime}" />
                                    <KeyBinding
                                        Key="A"
                                        Command="{Binding SelectTextCommand, Mode=OneTime}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBox}}"
                                        Modifiers="Ctrl" />
                                    <!--  選択したテキストをプロセスとして実行  -->
                                    <KeyBinding
                                        Key="O"
                                        Command="{Binding ExecuteSelectedTextCommand, Mode=OneTime}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBox}}"
                                        Modifiers="Ctrl" />
                                </TextBox.InputBindings>
                            </TextBox>
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem
                    Width="Auto"
                    Height="Auto"
                    Margin="10,0,10,0"
                    Padding="0"
                    FontSize="10"
                    Header="プレビュー">
                    <ScrollViewer
                        Height="300"
                        VerticalAlignment="Top"
                        VerticalScrollBarVisibility="Auto">
                        <TextBox
                            Margin="10,10,10,10"
                            VerticalAlignment="Top"
                            Text="{Binding PreviewText, Mode=OneWay}"
                            TextWrapping="Wrap" />
                    </ScrollViewer>
                </TabItem>
                <TabItem
                    Width="Auto"
                    Height="Auto"
                    Margin="10,0,10,0"
                    Padding="0"
                    FontSize="10"
                    Header="プレビュー(JSON)">
                    <ScrollViewer
                        Height="300"
                        VerticalAlignment="Top"
                        VerticalScrollBarVisibility="Auto">
                        <TextBox
                            Margin="10,10,10,10"
                            VerticalAlignment="Top"
                            Text="{Binding PreviewJson, Mode=OneWay}"
                            TextWrapping="Wrap" />
                    </ScrollViewer>
                </TabItem>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding TabSelectionChangedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TabControl>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ToggleButton
                    x:Name="MenuToggleButton"
                    Grid.Column="0"
                    Height="25"
                    Margin="10,0,10,5"
                    VerticalAlignment="Center"
                    AutomationProperties.Name="HamburgerToggleButton"
                    IsChecked="{Binding IsDrawerOpen, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                <StackPanel
                    Grid.Column="3"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <Button
                        Margin="10,0,10,5"
                        Command="{Binding SaveCommand, Mode=OneTime}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                        Content="保存" />
                    <Button
                        Margin="10,0,10,5"
                        Command="{Binding SendChatCommand, Mode=OneTime}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                        Content="送信" />
                    <Button
                        Margin="10,0,10,5"
                        Command="{Binding ClearChatCommand, Mode=OneTime}"
                        Content="クリア" />
                    <Button
                        Margin="10,0,10,5"
                        Command="{Binding CloseCommand, Mode=OneTime}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                        Content="閉じる" />
                </StackPanel>
            </Grid>
            <ProgressBar
                Grid.Row="0"
                IsIndeterminate="{Binding IsIndeterminate}"
                Style="{StaticResource MaterialDesignCircularProgressBar}"
                Value="0" />

        </Grid>
    </materialDesign:DrawerHost>
</UserControl>
