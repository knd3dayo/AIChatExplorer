<Window
    x:Class="LibUIPythonAI.View.Folder.ExportImportWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="clr-namespace:LibUIPythonAI.View.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:LibUIPythonAI.ViewModel.Folder"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:res="clr-namespace:LibUIPythonAI.View.Folder"
    Title="{x:Static res:ViewStringResources.ImportApplicationItemsWindow}"
    Width="800"
    Height="500"
    d:DataContext="{d:DesignInstance local:ExportImportWindowViewModel}"
    Style="{StaticResource MaterialDesignWindow}"
    mc:Ignorable="d">
    <Window.Resources>
        <Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="25" />
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding
            Key="Escape"
            Command="{Binding CloseCommand, Mode=OneTime}"
            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="18" />
            <RowDefinition Height="*" />
            <RowDefinition Height="100" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <!--  メニューバー  -->
        <StackPanel
            Grid.Row="0"
            Margin="0,0,0,0"
            Orientation="Vertical">
            <materialDesign:ColorZone
                materialDesign:ElevationAssist.Elevation="Dp4"
                DockPanel.Dock="Top"
                Mode="PrimaryMid">
                <Menu
                    Name="menu1"
                    Margin="0,0,0,0"
                    materialDesign:MenuAssist.TopLevelMenuItemHeight="18"
                    IsMainMenu="False">
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="" />
                </Menu>
            </materialDesign:ColorZone>
        </StackPanel>
        <TabControl
            Grid.Row="1"
            Margin="10,10,10,10"
            HorizontalContentAlignment="Left"
            SelectedIndex="{Binding SelectedIndex, TargetNullValue=-1}">
            <TabItem
                Width="Auto"
                Height="Auto"
                Margin="10,3,10,3"
                Padding="0"
                FontSize="10"
                Header="{x:Static res:ViewStringResources.ExportToExcel}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <!--  エクスポート用のDataGrid Checkbox(IsCheckd、DisplayText）を表示  -->
                    <DataGrid
                        Grid.Row="0"
                        Margin="10,10,10,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        AutoGenerateColumns="False"
                        ItemsSource="{Binding ExportItems}"
                        SelectionMode="Single">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="{x:Static res:ViewStringResources.ExportTarget}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Content="{Binding DisplayText}" IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <!--  Excelからインポート  -->
            <TabItem
                Width="Auto"
                Height="Auto"
                Margin="10,3,10,3"
                Padding="0"
                FontSize="10"
                Header="{x:Static res:ViewStringResources.ImportFromExcel}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <!--  インポート時に自動処理を実行します  -->
                    <CheckBox
                        Grid.Row="0"
                        Margin="10,10,10,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Content="{x:Static res:ViewStringResources.ExecuteAutoProcessingOnImport}"
                        IsChecked="{Binding IsAutoProcessEnabled}" />
                    <!--  インポート用のDataGrid Checkbox(IsCheckd、DisplayText）を表示  -->
                    <DataGrid
                        Grid.Row="1"
                        Margin="10,10,10,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        AutoGenerateColumns="False"
                        ItemsSource="{Binding ImportItems}"
                        SelectionMode="Single">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="{x:Static res:ViewStringResources.ImportTarget}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Content="{Binding DisplayText}" IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                </Grid>
            </TabItem>
            <!--  URLリストからインポート  -->
            <TabItem
                Width="Auto"
                Height="Auto"
                Margin="10,3,10,3"
                Padding="0"
                FontSize="10"
                Header="{x:Static res:ViewStringResources.ImportFromRULList}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <!--  インポート時に自動処理を実行します  -->
                    <CheckBox
                        Grid.Row="0"
                        Margin="10,10,10,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Content="{x:Static res:ViewStringResources.ExecuteAutoProcessingOnImport}"
                        IsChecked="{Binding IsAutoProcessEnabled, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </TabItem>
        </TabControl>
        <Grid Grid.Row="2" VerticalAlignment="Bottom">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <DockPanel
                Grid.Row="0"
                Grid.Column="0"
                Margin="10,0,0,10"
                HorizontalAlignment="Left">
                <Button
                    Width="100"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Left"
                    Command="{Binding OpenApplicationFolderWindowCommand, Mode=OneTime}"
                    Content="{x:Static res:ViewStringResources.SelectApplicationFolder}" />
                <TextBox
                    Width="300"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Left"
                    IsReadOnly="True"
                    Text="{Binding SelectedApplicationFolderPath, Mode=OneWay}"
                    TextWrapping="Wrap" />
            </DockPanel>
            <DockPanel
                Grid.Row="1"
                Grid.Column="0"
                Margin="10,0,0,10"
                HorizontalAlignment="Left">
                <Button
                    Width="100"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Left"
                    Command="{Binding SelectExportFileCommand, Mode=OneTime}"
                    Content="{x:Static res:ViewStringResources.SelectFile}" />
                <TextBox
                    Width="300"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Left"
                    IsReadOnly="True"
                    Text="{Binding SelectedFileName, Mode=OneWay}"
                    TextWrapping="Wrap" />
            </DockPanel>
            <DockPanel
                Grid.Row="1"
                Grid.Column="1"
                Margin="10,0,0,10"
                HorizontalAlignment="Right">
                <Button
                    Width="100"
                    Margin="10,0,0,0"
                    Command="{Binding OKCommand, Mode=OneTime}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="{x:Static res:ViewStringResources.OK}" />
                <Button
                    Width="100"
                    Margin="10,0,20,0"
                    Command="{Binding CloseCommand, Mode=OneTime}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="{x:Static res:ViewStringResources.Close}"
                    DockPanel.Dock="Right" />
            </DockPanel>
        </Grid>
        <cc:MyStatusBar Grid.Row="3" VerticalAlignment="Bottom" />
        <ProgressBar
            Grid.Row="1"
            IsIndeterminate="{Binding CommonViewModelProperties.IsIndeterminate}"
            Style="{StaticResource MaterialDesignCircularProgressBar}"
            Value="0" />
    </Grid>



</Window>
