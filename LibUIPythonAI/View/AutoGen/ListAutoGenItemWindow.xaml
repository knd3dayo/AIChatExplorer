<Window
    x:Class="LibUIPythonAI.View.AutoGen.ListAutoGenItemWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="clr-namespace:LibUIPythonAI.View.Common"
    xmlns:commonModel="clr-namespace:LibUIPythonAI.Resource"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:LibUIPythonAI.ViewModel.AutoGen"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:res="clr-namespace:LibUIPythonAI.View.AutoGen"
    Title="{x:Static res:ViewStringResources.ListAutoGenItemWindow}"
    Width="800"
    Height="450"
    d:DataContext="{d:DesignInstance Type=local:ListAutoGenItemWindowViewModel}"
    mc:Ignorable="d">
    <Window.Resources>
        <commonModel:CommonStringResources x:Key="StringResources" />
        <Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="25" />
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--  メニューバー  -->
        <StackPanel
            Grid.Row="0"
            Margin="0,0,0,0"
            Orientation="Vertical">
            <materialDesign:ColorZone
                materialDesign:ElevationAssist.Elevation="Dp4"
                DockPanel.Dock="Top"
                Mode="PrimaryMid">
                <Menu
                    Name="menu1"
                    Margin="0,0,0,0"
                    materialDesign:MenuAssist.TopLevelMenuItemHeight="18"
                    IsMainMenu="False">
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="" />
                </Menu>

            </materialDesign:ColorZone>
        </StackPanel>
        <TabControl
            Grid.Row="1"
            HorizontalContentAlignment="Left"
            SelectedIndex="{Binding SelectedTabIndex, TargetNullValue=-1}">
            <!--  グループチャット  -->
            <TabItem Header="{x:Static res:ViewStringResources.GroupChat}">
                <DataGrid
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    CanUserReorderColumns="False"
                    CanUserResizeColumns="False"
                    CanUserResizeRows="False"
                    CanUserSortColumns="False"
                    IsReadOnly="True"
                    ItemsSource="{Binding AutoGenGroupChats}"
                    SelectedItem="{Binding SelectedAutoGenGroupChat, Mode=TwoWay}"
                    SelectionMode="Single"
                    SelectionUnit="FullRow">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding AutoGenGroupChatSelectionChangedCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <DataGrid.InputBindings>
                        <!--  Open selected item window by double-clicking  -->
                        <MouseBinding Command="{Binding OpenEditAutoGenGroupChatWindowCommand}" MouseAction="LeftDoubleClick" />
                    </DataGrid.InputBindings>
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="200"
                            Binding="{Binding Name}"
                            Header="{x:Static res:ViewStringResources.Name}" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Description}"
                            Header="{x:Static res:ViewStringResources.Description}" />
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding DeleteAutoGenGroupChatCommand}" Header="{x:Static res:ViewStringResources.Delete}" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </TabItem>
            <!--  Agent  -->
            <TabItem Header="{x:Static res:ViewStringResources.Agent}" Visibility="{Binding NormalModeVisibility}">
                <DataGrid
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    CanUserReorderColumns="False"
                    CanUserResizeColumns="False"
                    CanUserResizeRows="False"
                    CanUserSortColumns="False"
                    IsReadOnly="True"
                    ItemsSource="{Binding AutoGenAgents}"
                    SelectedItem="{Binding SelectedAutoGenAgent, Mode=TwoWay}"
                    SelectionMode="Single"
                    SelectionUnit="FullRow">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding AutoGenAgentSelectionChangedCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.InputBindings>
                        <!--  Open selected item window by double-clicking  -->
                        <MouseBinding Command="{Binding OpenEditAutoGenAgentWindowCommand}" MouseAction="LeftDoubleClick" />
                    </DataGrid.InputBindings>
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="200"
                            Binding="{Binding Name}"
                            Header="{x:Static res:ViewStringResources.Name}" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Description}"
                            Header="{x:Static res:ViewStringResources.Description}" />
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding DeleteAutoGenAgentCommand}" Header="{x:Static res:ViewStringResources.Delete}" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </TabItem>
            <TabItem Header="{x:Static res:ViewStringResources.Tool}" Visibility="{Binding NormalModeVisibility}">
                <DataGrid
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    CanUserReorderColumns="False"
                    CanUserResizeColumns="False"
                    CanUserResizeRows="False"
                    CanUserSortColumns="False"
                    IsReadOnly="True"
                    ItemsSource="{Binding AutoGenTools}"
                    SelectedItem="{Binding SelectedAutoGenTool, Mode=TwoWay}"
                    SelectionMode="Single"
                    SelectionUnit="FullRow">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding AutoGenToolSelectionChangedCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.InputBindings>
                        <!--  Open selected item window by double-clicking  -->
                        <MouseBinding Command="{Binding OpenEditAutoGenToolWindowCommand}" MouseAction="LeftDoubleClick" />
                    </DataGrid.InputBindings>
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="200"
                            Binding="{Binding Name}"
                            Header="{x:Static res:ViewStringResources.Name}" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Description}"
                            Header="{x:Static res:ViewStringResources.Description}" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding SourcePath}"
                            Header="{x:Static res:ViewStringResources.SourcePath}" />
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding DeleteAutoGenToolCommand}" Header="{x:Static res:ViewStringResources.Delete}" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </TabItem>
            <!--  LLMConfig  -->
            <TabItem Header="{x:Static res:ViewStringResources.LLMConfig}" Visibility="{Binding NormalModeVisibility}">
                <DataGrid
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    CanUserReorderColumns="False"
                    CanUserResizeColumns="False"
                    CanUserResizeRows="False"
                    CanUserSortColumns="False"
                    IsReadOnly="True"
                    ItemsSource="{Binding AutoGenLLMConfigs}"
                    SelectedItem="{Binding SelectedAutoGenLLMConfig, Mode=TwoWay}"
                    SelectionMode="Single"
                    SelectionUnit="FullRow">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding AutoGenLLMConfigSelectionChangedCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.InputBindings>
                        <!--  Open selected item window by double-clicking  -->
                        <MouseBinding Command="{Binding OpenEditAutoGenLLMConfigWindowCommand}" MouseAction="LeftDoubleClick" />
                    </DataGrid.InputBindings>
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="200"
                            Binding="{Binding Name}"
                            Header="{x:Static res:ViewStringResources.Name}" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding ApiType}"
                            Header="{x:Static res:ViewStringResources.ApiType}" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding ApiVersion}"
                            Header="{x:Static res:ViewStringResources.ApiVersion}" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Model}"
                            Header="{x:Static res:ViewStringResources.Model}" />
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding DeleteAutoGenLLMConfigCommand}" Header="{x:Static res:ViewStringResources.Delete}" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </TabItem>
        </TabControl>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0" HorizontalAlignment="Left">
                <Button
                    Width="100"
                    Margin="10,0,10,5"
                    Command="{Binding AddItemCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="{x:Static res:ViewStringResources.Add}" />
            </DockPanel>
            <DockPanel Grid.Column="1" HorizontalAlignment="Right">
                <Button
                    Width="100"
                    Margin="10,0,10,5"
                    Command="{Binding SelectCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="{x:Static res:ViewStringResources.Select}"
                    DockPanel.Dock="Right"
                    Visibility="{Binding SelectGroupChatModeVisibility}" />
                <Button
                    Width="100"
                    Margin="10,0,10,5"
                    Command="{Binding CloseCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="{x:Static res:ViewStringResources.Close}"
                    DockPanel.Dock="Right" />
            </DockPanel>
        </Grid>
        <cc:MyStatusBar Grid.Row="3" VerticalAlignment="Bottom" />
    </Grid>
</Window>
