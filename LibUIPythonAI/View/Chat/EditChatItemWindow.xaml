<Window
    x:Class="LibUIPythonAI.View.Chat.EditChatItemWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="clr-namespace:LibUIPythonAI.View.Common"
    xmlns:commonModel="clr-namespace:LibUIPythonAI.Resource"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editorControl="clr-namespace:LibUIPythonAI.Control.Editor"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:LibUIPythonAI.ViewModel.Chat"
    xmlns:res="clr-namespace:LibUIPythonAI.View.Chat"
    Title="{x:Static res:ViewStringResources.ChatItem}"
    Width="800"
    Height="450"
    d:DataContext="{d:DesignInstance Type=model:EditChatItemWindowViewModel}"
    Style="{StaticResource MaterialDesignWindow}"
    WindowState="Maximized"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/LibUIPythonAI;component/Resource/Dictionary1.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Height" Value="25" />
            </Style>
        </ResourceDictionary>

    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding
            Key="Escape"
            Command="{Binding CloseCommand, Mode=OneTime}"
            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--  メニューバー  -->
        <StackPanel
            Grid.Row="0"
            Margin="0,0,0,0"
            Orientation="Vertical">
            <materialDesign:ColorZone
                materialDesign:ElevationAssist.Elevation="Dp4"
                DockPanel.Dock="Top"
                Mode="PrimaryMid">
                <Menu
                    Name="menu1"
                    Margin="0,0,0,0"
                    materialDesign:MenuAssist.TopLevelMenuItemHeight="18"
                    IsMainMenu="False">
                    <MenuItem
                        Background="{DynamicResource MaterialDesign.Brush.Primary}"
                        Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                        Header="" />
                </Menu>
            </materialDesign:ColorZone>
        </StackPanel>
        <Grid Grid.Row="1" Visibility="{Binding MarkdownVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="150" />
            </Grid.RowDefinitions>
            <editorControl:BindableRichTextBox
                Grid.Row="0"
                Margin="10,10,10,10"
                VerticalContentAlignment="Top"
                Document="{Binding ContentFlowDocument, Mode=OneWay}"
                FontSize="12"
                HorizontalScrollBarVisibility="Auto"
                IsReadOnly="True"
                VerticalScrollBarVisibility="Auto" />
            <editorControl:BindableRichTextBox
                Grid.Row="1"
                Margin="10,10,10,10"
                VerticalContentAlignment="Top"
                Document="{Binding SourcesFlowDocument, Mode=OneWay}"
                FontSize="12"
                HorizontalScrollBarVisibility="Auto"
                IsReadOnly="True"
                VerticalScrollBarVisibility="Auto" />
        </Grid>
        <Grid Grid.Row="1" Visibility="{Binding TextVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="150" />
            </Grid.RowDefinitions>
            <editorControl:MyTextBox
                x:Name="textBox"
                Grid.Row="0"
                Margin="10,10,10,10"
                VerticalContentAlignment="Top"
                FontSize="12"
                HorizontalScrollBarVisibility="Auto"
                IsReadOnly="True"
                Text="{Binding ChatItem.Content, Mode=OneWay}"
                TextWrappingMode="{Binding CommonViewModelProperties.TextWrappingMode, Mode=OneWay}"
                VerticalScrollBarVisibility="Auto" />
            <editorControl:MyTextBox
                x:Name="textBox2"
                Grid.Row="1"
                Margin="10,10,10,10"
                VerticalContentAlignment="Top"
                FontSize="12"
                HorizontalScrollBarVisibility="Auto"
                IsReadOnly="True"
                Text="{Binding ChatItem.SourcesString, Mode=OneWay}"
                TextWrappingMode="{Binding CommonViewModelProperties.TextWrappingMode, Mode=OneWay}"
                VerticalScrollBarVisibility="Auto" />
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <CheckBox
                Grid.Column="0"
                Margin="10,0,10,10"
                HorizontalAlignment="Left"
                Content="{x:Static res:ViewStringResources.MarkdownView}"
                FontSize="8pt"
                IsChecked="{Binding CommonViewModelProperties.MarkdownView, UpdateSourceTrigger=PropertyChanged}" />

            <DockPanel
                Grid.Column="1"
                Margin="10,0,10,10"
                HorizontalAlignment="Right">
                <Button
                    Width="100"
                    Margin="10,0,10,0"
                    Command="{Binding CloseCommand, Mode=OneTime}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Content="{x:Static res:ViewStringResources.Close}"
                    DockPanel.Dock="Right" />
            </DockPanel>
        </Grid>
        <cc:MyStatusBar Grid.Row="3" VerticalAlignment="Bottom" />
    </Grid>

</Window>
